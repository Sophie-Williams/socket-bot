{"version":3,"sources":["webpack/bootstrap 5a80dc8722a20ab3dc0b","./lib/entry.js","./lib/renderer.js","./lib/wire.js","./lib/powerObject.js","./lib/wireJunction.js","./lib/wireSegment.js","./lib/robot.js","./lib/door.js","./lib/buttonBlock.js","./lib/cubby.js","./lib/panel.js","./lib/game.js","./lib/levels/tutorial.js","./lib/level_builder.js","./lib/elevator.js","./lib/exitElevator.js","./lib/powerSource.js","./lib/forceFieldBlock.js","./lib/spring.js","./lib/message.js","./lib/levels/level1.js","./lib/levels/level2.js","./lib/levels/level3.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,IAAG;;AAEH;AACA,EAAC;;;;;;;AC7BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,6DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAsB;AACtB;AACA,mEAAkE;AAClE;AACA,qBAAoB;AACpB;AACA,qEAAoE;;AAEpE;AACA;;AAEA;AACA;AACA,mCAAkC,yBAAyB;AAC3D;AACA,qCAAoC,yBAAyB;AAC7D;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mCAAkC,yBAAyB;AAC3D;AACA,qCAAoC,yBAAyB;AAC7D;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAkC,yBAAyB;AAC3D;AACA,sBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,wBAAuB;AACvB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH,wBAAuB;AACvB;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB,kEAAkE;AACpF;AACA;AACA;AACA;AACA,IAAG;AACH,qBAAoB,qEAAqE;AACzF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACh/BA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACZA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClFA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAiB,gCAAgC;AACjD;AACA,6CAA4C,UAAU;AACtD,MAAK;AACL,6CAA4C,UAAU;AACtD,MAAK;AACL,6CAA4C,UAAU;AACtD,MAAK;AACL,6CAA4C,UAAU;AACtD;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,gCAAgC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,yBAAyB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,6BAA6B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACzHA;AACA;AACA;AACA;;AAEA;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACPA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACdA;AACA;AACA;AACA;;AAEA,gCAA+B;AAC/B;;AAEA;;;;;;;ACRA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACpFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA,+BAA8B;AAC9B;AACA,MAAK,gCAAgC;AACrC;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,gCAAgC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK,wDAAwD;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,sCAAsC;AACvD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB,2CAA2C;AAC5D;AACA;AACA;;AAEA;AACA,kBAAiB,qCAAqC;AACtD;AACA;AACA,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;AACA,kBAAiB,+CAA+C;AAChE;AACA;AACA,kBAAiB,2CAA2C;AAC5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,wBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA,0BAAyB,wBAAwB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,6BAA4B;AAC5B;AACA,yBAAwB;AACxB,gCAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;ACzqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,qBAAoB,8CAA8C;AAClE,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,qBAAoB,8CAA8C;AAClE,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,qBAAoB,8CAA8C;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;ACvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,kBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAA+B;AAC/B;;AAEA;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACpBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;ACXA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACVA;AACA;AACA,gCAA+B;AAC/B;;AAEA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,qBAAoB,+CAA+C;AACnE,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C;AACA,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,qBAAoB,mDAAmD;AACvE,aAAY,8BAA8B;;AAE1C;AACA,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;ACnNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,qBAAoB,8CAA8C;AAClE,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,qBAAoB,8CAA8C;AAClE,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC;;AAEA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED;;;;;;;ACjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,qBAAoB,+CAA+C;AACnE,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,qBAAoB,mDAAmD;AACvE,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;;AAE1C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,qBAAoB,8CAA8C;AAClE,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,6BAA6B;AACzC,qBAAoB,kDAAkD;AACtE,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,6BAA6B;AACzC,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,+BAA+B;AAC3C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C,aAAY,8BAA8B;AAC1C;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,kBAAiB,kBAAkB;AACnC;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;;AAED","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5a80dc8722a20ab3dc0b\n **/","var Renderer = require('./renderer.js')\nvar Game = require('./game.js')\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  var canvas = document.getElementById('canvas');\n  var context = canvas.getContext(\"2d\");\n  var renderer = new Renderer(context);\n  var levelSequence = [\n    require('./levels/tutorial.js'),\n    require('./levels/level1.js'),\n    require('./levels/level2.js'),\n    require('./levels/level3.js')\n  ];\n\n  gameInstance = new Game(renderer, levelSequence);\n  renderer.game = gameInstance;\n\n  window.addEventListener(\"keydown\", function (e) {\n    gameInstance.keysDown[e.keyCode] = true;\n    if (e.keyCode === 32 && gameInstance.status === \"menu\") {\n      gameInstance.startLevel();\n    }\n  }, false);\n\n  window.addEventListener(\"keyup\", function (e) {\n    delete gameInstance.keysDown[e.keyCode];\n  }, false);\n\n  gameInstance.startGame();\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/entry.js\n ** module id = 0\n ** module chunks = 0\n **/","const BLOCK_LENGTH = 75;\nconst EDGE_TO_INNER = 8;\nconst INNER_RECT_LENGTH = BLOCK_LENGTH - (EDGE_TO_INNER * 2);\nvar Wire = require('./wire.js');\nvar WireJunction = require('./wireJunction.js');\nvar Robot = require('./robot.js');\nvar Door = require('./door.js');\nvar ButtonBlock = require('./buttonBlock.js');\nvar Cubby = require('./cubby.js');\nvar Panel = require('./panel.js');\n\nfunction Renderer(context, game) {\n  this.c = context;\n  this.game = game;\n  this.gradientArray = this.fillGradientArray(\"rgb(43,216,233)\", 50);\n  this.gradientIndex = 0;\n  this.gradientSign = 1;\n  this.BUTTON_PANEL_WIDTH = 15;\n  this.BUTTON_PANEL_HEIGHT = 30;\n  this.seconds = 0;\n  this.showLevelName = true;\n}\n\nRenderer.prototype.renderScreen = function () {\n  if (this.game.status === \"end screen\") {\n    this.displayEndScreen();\n  } else {\n    var cornerSquares = this.getVisibleSquares(this.game.origin, this.game.currentLevel);\n    this.incrementGradientIndex();\n    this.incrementTime();\n    this.incrementDoors();\n    this.renderBackground(this.game.origin, this.game.currentLevel, cornerSquares);\n    this.renderBackgroundObjects(this.game.currentLevel.wiring, this.game.origin, this.game.currentLevel, cornerSquares)\n    this.renderBackgroundObjects(this.game.currentLevel.cubbies, this.game.origin, this.game.currentLevel, cornerSquares)\n    this.renderForeground(this.game.origin, this.game.currentLevel, cornerSquares);\n    this.renderElevators(this.game.origin, this.game.currentLevel, cornerSquares);\n    this.renderRobot(this.game.robot);\n    if (this.game.currentLevel.messages) { this.renderMessage(this.game.currentLevel.messages) }\n    if (this.game.currentLevel.name && this.showLevelName) { this.renderLevelName() };\n  }\n}\n\nRenderer.prototype.toggleLevelName = function (n) {\n  this.showLevelName = !this.showLevelName\n  return n - 1;\n};\n\nRenderer.prototype.renderMessage = function (messages) {\n  var realArrays = [this.game.origin, this.game.robot.pos]\n  var topRow = this.game.getTopRow(realArrays);\n  var bottomRow = this.game.getBottomRow(realArrays);\n  var leftCol = this.game.getLeftColumn(realArrays);\n  var rightCol = this.game.getRightColumn(realArrays);\n  for (var i = 0; i < messages.length; i++) {\n    if (messages[i].left <= leftCol && messages[i].right >= rightCol\n    && messages[i].top <= topRow && messages[i].bottom >= bottomRow) {\n      var addY = messages[i].pos == \"bottom\" ? 295 : 0\n      this.drawRectangle({\n        x: 5,\n        y: 5 + addY,\n        width: 590,\n        height: 145,\n        fill: 'black',\n        alpha: 0.7\n      })\n      this.c.fillStyle = 'white';\n      this.c.font = \"bold 26px 'Inconsolata'\";\n      this.c.textAlign = \"center\";\n      if (messages[i].text2) {\n        this.c.fillText(messages[i].text, 300, 55 + addY);\n        this.c.fillText(messages[i].text2, 300, 115 + addY);\n      } else {\n        this.c.fillText(messages[i].text, 300, 85 + addY);\n      }\n    }\n  }\n};\n\nRenderer.prototype.renderLevelName = function () {\n  this.drawRectangle({\n    x: 100.5,\n    y: 50.5,\n    width: 400,\n    height: 100,\n    fill: 'black',\n    alpha: 0.8\n  })\n  this.c.textAlign = \"left\";\n  this.c.fillStyle = 'white';\n  this.c.font = \"bold 60px 'Inconsolata'\";\n  this.c.fillText(this.game.currentLevel.name, 200.5, 120.5);\n};\n\nRenderer.prototype.displayLoadScreen = function () {\n  this.blackBackground();\n  var loadGame = window.setInterval(function () {\n    clearInterval(loadGame)\n    this.game.showMainMenu()\n  }.bind(this), 1000);\n};\n\nRenderer.prototype.displayMenu = function () {\n  this.blackBackground();\n  this.c.fillStyle = 'white';\n  this.c.font = \"bold italic 90px 'Inconsolata'\";\n  this.c.fillText(\"Socket\", 40, 110);\n  this.c.fillText(\"Bot\", 100, 190);\n  this.drawFullCircle({\n    pos: [450, 125],\n    radius: 100,\n    fill: '#58D3F7'\n  })\n  var menuRobot = new Robot([413.5, 120.5]);\n  menuRobot.height = 70;\n  this.renderRobot(menuRobot)\n  this.c.fillStyle = 'white';\n  this.c.font = \"bold 30px 'Inconsolata'\";\n  this.c.fillText(\"A 2D Puzzle Game by Peter Lemiszki\", 40, 280);\n  this.c.fillStyle = 'yellow';\n  this.c.font = \"bold 30px 'Inconsolata'\";\n  this.c.fillText(\"Push SPACEBAR to Start\", 136, 370);\n};\n\nRenderer.prototype.displayEndScreen = function () {\n  this.blackBackground();\n  this.c.fillStyle = 'white';\n  this.c.font = \"bold 60px 'Inconsolata'\";\n  this.c.fillText(\"Congratulations!\", 65, 120);\n  this.c.font = \"bold 30px 'Inconsolata'\";\n  this.c.fillText(\"You've completed all the levels.\", 65, 180);\n  this.c.font = \"bold 24px 'Inconsolata'\";\n  this.c.fillText(\"How's it feel?\", 216, 300);\n};\n\nRenderer.prototype.getVisibleSquares = function (origin, currentLevel) {\n  var topRow = Math.floor(origin[1] / BLOCK_LENGTH);\n  if (topRow === -1) { topRow = 0 };\n  var bottomRow = Math.floor((origin[1] + (BLOCK_LENGTH * 6) - 1) / BLOCK_LENGTH);\n  if (bottomRow >= this.game.currentLevel.foregroundGrid.length) { bottomRow = this.game.currentLevel.foregroundGrid.length - 1 }\n  var leftCol = Math.floor(origin[0] / BLOCK_LENGTH) - 1;\n  if (leftCol < 0) { leftCol = 0 };\n  var rightCol = Math.floor((origin[0] + (BLOCK_LENGTH * 8) - 1) / BLOCK_LENGTH) + 1;\n  if (rightCol >= this.game.currentLevel.foregroundGrid[0].length) { rightCol = this.game.currentLevel.foregroundGrid[0].length - 1 }\n\n  return [topRow, leftCol, bottomRow, rightCol];\n};\n\nRenderer.prototype.renderForeground = function (origin, currentLevel, cornerSquares) {\n  var row_top_y = cornerSquares[0] * BLOCK_LENGTH;\n  for (var row = cornerSquares[0]; row <= cornerSquares[2]; row++) {\n    var col_left_x = cornerSquares[1] * BLOCK_LENGTH;\n    for (var col = cornerSquares[1]; col <= cornerSquares[3]; col++) {\n      var x_block = (-1 * origin[0]) + col_left_x + 0.5;\n      var y_block = (-1 * origin[1]) + row_top_y + 0.5;\n      if (currentLevel.foregroundGrid[row][col] === \"\") {\n      } else if (currentLevel.foregroundGrid[row][col] === \"block\") {\n        this.drawBlock([x_block, y_block]);\n      } else if (currentLevel.foregroundGrid[row][col] === \"platform\") {\n        this.drawPlatform([x_block, y_block], '#2c2929', '#161515');\n      } else if (currentLevel.foregroundGrid[row][col].toString() === \"door\") {\n        this.drawDoor(currentLevel.foregroundGrid[row][col],[x_block, y_block]);\n      } else if (currentLevel.foregroundGrid[row][col].toString() === \"ButtonBlock\") {\n        this.drawButtonBlock(currentLevel.foregroundGrid[row][col],[x_block, y_block]);\n      } else if (currentLevel.foregroundGrid[row][col].toString() === \"PowerSource\") {\n        this.drawPowerBlock([x_block, y_block], currentLevel.foregroundGrid[row][col]);\n      } else if (currentLevel.foregroundGrid[row][col] === \"powerBlock\") {\n        this.drawPowerBlock([x_block, y_block], currentLevel.foregroundGrid[row][col]);\n      } else if (currentLevel.foregroundGrid[row][col].toString() === \"ForceFieldBlock\") {\n        this.drawForceFieldBlock([x_block, y_block], currentLevel.foregroundGrid[row][col]);\n      } else if (currentLevel.foregroundGrid[row - 1][col].toString() === \"ForceFieldBlock\" && currentLevel.foregroundGrid[row - 1][col].hasPower) {\n        this.drawForceField([x_block, y_block]);\n      } else if (currentLevel.foregroundGrid[row][col].toString() === \"spring\" && currentLevel.foregroundGrid[row][col].pickedUp === false) {\n        this.drawSpringPowerUp([x_block, y_block]);\n      }\n\n      col_left_x += 75;\n    }\n\n    row_top_y += 75;\n  }\n}\n\nRenderer.prototype.renderBackground = function (origin, currentLevel, cornerSquares) {\n  var row_top_y = cornerSquares[0] * BLOCK_LENGTH;\n  for (var row = cornerSquares[0]; row <= cornerSquares[2]; row++) {\n    var col_left_x = cornerSquares[1] * BLOCK_LENGTH;\n    for (var col = cornerSquares[1]; col <= cornerSquares[3]; col++) {\n      if (currentLevel.foregroundGrid[row][col] === \"block\") {\n        col_left_x += 75;\n        continue; //skip - there's a foreground block covering this square\n      }\n      var x_block = (-1 * origin[0]) + col_left_x + 0.5;\n      var y_block = (-1 * origin[1]) + row_top_y + 0.5;\n      if (currentLevel.backgroundGrid[row][col] === \"brick\"){\n        var leftEdges = currentLevel.foregroundGrid[row][col - 1] !== \"block\"\n        this.drawBrick([x_block, y_block], currentLevel.color, leftEdges);\n      }\n\n      col_left_x += 75;\n    }\n\n    row_top_y += 75;\n  }\n}\n\nRenderer.prototype.renderElevators = function (origin, currentLevel, cornerSquares) {\n  var col_left_x = cornerSquares[1] * BLOCK_LENGTH;\n  //iterate through each visible column:\n  for (var col = cornerSquares[1]; col <= cornerSquares[3]; col++) {\n    //iterate through elevators to see if there's one in this column:\n    for (var elv = 0; elv < currentLevel.elevators.length; elv++) {\n      if (currentLevel.elevators[elv].col === col) {\n        //if so, find where the top is:\n        var topRow = currentLevel.elevators[elv].topRow;\n        var additionalPixels = currentLevel.elevators[elv].additionalPixels;\n        var x_block = (-1 * origin[0]) + col_left_x + 0.5;\n        var platform_top_y = (BLOCK_LENGTH * topRow) - origin[1] + 0.5;\n        var adjustedPlatformTop = platform_top_y - additionalPixels;\n        //and the bottom\n        var realBaseBottomY = ((currentLevel.elevators[elv].baseRow + 1) * BLOCK_LENGTH) + 0.5;\n        var relBaseBottomY = realBaseBottomY - origin[1];\n        this.drawElevator(x_block, adjustedPlatformTop, relBaseBottomY, currentLevel.elevators[elv].exit)\n      }\n    }\n\n    col_left_x += 75;\n  }\n};\n\nRenderer.prototype.drawElevator = function (x_block, adjustedPlatformTop, relBaseBottomY, exit) {\n  const COLUMN_WIDTH = 25;\n  var inset = Math.floor((BLOCK_LENGTH - COLUMN_WIDTH) / 2)\n  var column_top_y = adjustedPlatformTop + Math.floor(BLOCK_LENGTH / 3);\n  var height = relBaseBottomY - column_top_y\n  if (450 - column_top_y < height) {\n    height = 450 - column_top_y;\n  }\n  var grad = this.c.createLinearGradient(x_block + inset, 0, x_block + inset + COLUMN_WIDTH, 0);\n  grad.addColorStop(0, '#1A1919');\n  grad.addColorStop(0.5, '#68625F');\n  grad.addColorStop(1, '#1A1919');\n  this.c.beginPath();\n  this.c.rect(x_block + inset, column_top_y, COLUMN_WIDTH, height)\n  this.c.fillStyle = grad;\n  this.c.fill();\n  this.c.strokeStyle = '#000';\n  this.c.stroke();\n  if (exit) {\n    this.drawPlatform([x_block, adjustedPlatformTop], 'red', '#440000');\n  } else {\n    this.drawPlatform([x_block, adjustedPlatformTop], '#67480E', '#211705');\n  }\n};\n\nRenderer.prototype.renderBackgroundObjects = function (objects, origin, currentLevel, cornerSquares) {\n  for (var i = 0; i < objects.length; i++) {\n    if (objects[i].rowCol[0] >= cornerSquares[0] &&\n        objects[i].rowCol[1] >= cornerSquares[1] &&\n        objects[i].rowCol[0] <= cornerSquares[2] &&\n        objects[i].rowCol[1] <= cornerSquares[3]\n    ) {\n      var x_block = (BLOCK_LENGTH * objects[i].rowCol[1]) - origin[0] + 0.5;\n      var y_block = (BLOCK_LENGTH * objects[i].rowCol[0]) - origin[1] + 0.5;\n      if (objects[i] instanceof Wire) {\n        this.drawWire([x_block, y_block], objects[i]);\n      } else if (objects[i] instanceof WireJunction) {\n        this.drawWireJunction([x_block, y_block], objects[i]);\n      } else if (objects[i] instanceof Cubby) {\n        this.drawCubby([x_block, y_block], objects[i]);\n      }\n    }\n  }\n};\n\nRenderer.prototype.renderRobot = function (robot) {\n  var leftWheelCenter = [robot.pos[0] + 5, robot.pos[1] + BLOCK_LENGTH - 5]\n  var rightWheelCenter = [robot.pos[0] + BLOCK_LENGTH - 6, robot.pos[1] + BLOCK_LENGTH - 5]\n  var bottomBarTop = leftWheelCenter[1] - 6;\n  var headBottom = robot.pos[1] + 10 - robot.height + 54;\n  this.drawDot([robot.pos[0] + (BLOCK_LENGTH / 2), bottomBarTop - ((bottomBarTop - headBottom) / 4)])\n  this.drawDot([robot.pos[0] + 15, bottomBarTop - ((bottomBarTop - headBottom) / 2)])\n  this.drawDot([robot.pos[0] + BLOCK_LENGTH - 15, bottomBarTop - ((bottomBarTop - headBottom) / 2)])\n  this.drawDot([robot.pos[0] + (BLOCK_LENGTH / 2), bottomBarTop - ((bottomBarTop - headBottom) / 4 * 3)])\n  this.drawLine([robot.pos[0] + 15, bottomBarTop], [robot.pos[0] + BLOCK_LENGTH - 15, bottomBarTop - ((bottomBarTop - headBottom) / 2)])\n  this.drawLine([robot.pos[0] + BLOCK_LENGTH - 15, bottomBarTop], [robot.pos[0] + 15, bottomBarTop - ((bottomBarTop - headBottom) / 2)])\n  this.drawLine([robot.pos[0] + 15, bottomBarTop - ((bottomBarTop - headBottom) / 2)], [robot.pos[0] + BLOCK_LENGTH - 15, headBottom])\n  this.drawLine([robot.pos[0] + BLOCK_LENGTH - 15, bottomBarTop - ((bottomBarTop - headBottom) / 2)], [robot.pos[0] + 15, headBottom])\n  this.drawHead(robot)\n\n  //bottom bar:\n  this.drawRectangle({\n    x: leftWheelCenter[0],\n    y: bottomBarTop,\n    width: 60,\n    height: 5,\n    fill: 'yellow',\n    stroke: '#000'\n  })\n\n  //left arm:\n  this.drawRectangle({\n    x: robot.pos[0],\n    y: robot.pos[1] + 30,\n    width: 5,\n    height: 15,\n    fill: 'yellow',\n    stroke: '#000'\n  })\n  this.drawRectangle({\n    x: leftWheelCenter[0],\n    y: robot.pos[1] + 37,\n    width: 3,\n    height: 30,\n    fill: 'yellow',\n    stroke: '#000'\n  })\n\n  this.drawFullCircle({ //left wheel\n    pos: [leftWheelCenter[0], leftWheelCenter[1]],\n    radius: 5,\n    fill: '#000'\n  })\n\n  this.c.beginPath();\n  this.c.arc(\n    leftWheelCenter[0],\n    leftWheelCenter[1],\n    8, 1.5 * Math.PI, 2 * Math.PI, false\n  );\n  this.c.lineTo(leftWheelCenter[0], leftWheelCenter[1])\n  this.c.closePath();\n  this.c.fillStyle = 'yellow';\n  this.c.fill();\n  this.c.stroke();\n\n  //right arm:\n  this.drawRectangle({\n    x: robot.pos[0] + BLOCK_LENGTH - 6,\n    y: robot.pos[1] + 30,\n    width: 5,\n    height: 15,\n    fill: 'yellow',\n    stroke: '#000'\n  })\n  this.drawRectangle({\n    x: rightWheelCenter[0] - 3,\n    y: robot.pos[1] + 37,\n    width: 3,\n    height: 30,\n    fill: 'yellow',\n    stroke: '#000'\n  })\n\n  this.drawFullCircle({ //right wheel\n    pos: [rightWheelCenter[0], rightWheelCenter[1]],\n    radius: 5,\n    fill: '#000'\n  })\n\n  this.c.beginPath();\n  this.c.arc(\n    rightWheelCenter[0],\n    rightWheelCenter[1],\n    8, Math.PI, 1.5 * Math.PI, false\n  );\n  this.c.lineTo(rightWheelCenter[0], rightWheelCenter[1])\n  this.c.closePath();\n  this.c.fillStyle = 'yellow';\n  this.c.fill();\n  this.c.stroke();\n};\n\nRenderer.prototype.drawHead = function (robot) {\n  var x = robot.pos[0] + 10;\n  var y = robot.pos[1] + 10 - robot.height;\n  this.drawFrame({ x: x, y: y, width: 54, height: 54, thickness: 5, fill: 'yellow' });\n  var x2 = x + 5;\n  var y2 = y + 5;\n  if (robot.item) {\n    robot.item.render(this.c, [x2, y2], 44, false);\n  } else {\n    this.drawFrame({ x: x2, y: y2, width: 44, height: 44, thickness: 5, fill: '#8C8400' });\n    this.drawLine([x2, y2], [x2 + 5, y2 + 5]);\n    this.drawLine([x2, y2 + 44], [x2 + 5, y2 + 39]);\n    this.drawLine([x2 + 44, y2], [x2 + 39, y2 + 5]);\n    this.drawLine([x2 + 44, y2 + 44], [x2 + 39, y2 + 39]);\n  }\n};\n\nRenderer.prototype.drawDoor = function (door, pos) {\n  var TOOTH_HEIGHT = 8;\n  if (door.status !== \"open\") {\n    var x = pos[0];\n    var y = pos[1];\n    var width = Math.floor(BLOCK_LENGTH / 3);\n    var topLeftCorner;\n    var topRightCorner;\n    var bottomRightCorner;\n    var bottomLeftCorner;\n    if (door.side === \"right\") {\n      topLeftCorner = [x + BLOCK_LENGTH - 1 - width, y];\n      topRightCorner = [x + BLOCK_LENGTH - 1, y];\n      bottomRightCorner = [x + BLOCK_LENGTH - 1, y + BLOCK_LENGTH - 1];\n      bottomLeftCorner = [x + BLOCK_LENGTH - 1 - width, y + BLOCK_LENGTH - 1];\n    } else {\n      topLeftCorner = [x, y];\n      topRightCorner = [x + width, y];\n      bottomRightCorner = [x + width, y + BLOCK_LENGTH - 1];\n      bottomLeftCorner = [x, y + BLOCK_LENGTH - 1];\n    }\n    var openSpace = (BLOCK_LENGTH - 1) * door.percentOpen;\n    var doorHalfHeight = ((BLOCK_LENGTH - 1) - openSpace) / 2;\n    if (doorHalfHeight < -1) { doorHalfHeight = -1 };\n    var negPercent = (door.percentOpen - 1);\n    var negToothHeight = 0;\n    if (negPercent >= 0) {\n      negToothHeight = (BLOCK_LENGTH - 1) * negPercent / 2;\n    };\n\n    this.c.beginPath();\n    this.c.moveTo(topLeftCorner[0], topLeftCorner[1] - 1);\n    this.c.lineTo(topLeftCorner[0] + width, topLeftCorner[1] - 1);\n    this.c.lineTo(topLeftCorner[0] + width, topLeftCorner[1] + doorHalfHeight);\n    this.c.lineTo(topLeftCorner[0] + ((4 / 5) * width), topLeftCorner[1] + doorHalfHeight);\n    var topHeight = topLeftCorner[1] + doorHalfHeight + TOOTH_HEIGHT - negToothHeight;\n    if (topHeight < topLeftCorner[1] - 1) { topHeight = topLeftCorner[1] - 1};\n    this.c.lineTo(topLeftCorner[0] + ((4 / 5) * width), topHeight);\n    this.c.lineTo(topLeftCorner[0] + ((1 / 5) * width), topHeight);\n    this.c.lineTo(topLeftCorner[0] + ((1 / 5) * width), topLeftCorner[1] + doorHalfHeight);\n    this.c.lineTo(topLeftCorner[0], topLeftCorner[1] + doorHalfHeight);\n    this.c.closePath();\n    this.c.fillStyle = door.color;\n    this.c.fill();\n    this.c.strokeStyle = 'black';\n    this.c.stroke();\n\n    this.c.beginPath();\n    this.c.moveTo(topLeftCorner[0], topLeftCorner[1] + BLOCK_LENGTH - 1 - doorHalfHeight);\n    this.c.lineTo(topLeftCorner[0] + ((1 / 5) * width), topLeftCorner[1] + BLOCK_LENGTH - 1 - doorHalfHeight);\n    this.c.lineTo(topLeftCorner[0] + ((1 / 5) * width), topLeftCorner[1] + BLOCK_LENGTH - 1 - doorHalfHeight + TOOTH_HEIGHT);\n    this.c.lineTo(topLeftCorner[0] + ((4 / 5) * width), topLeftCorner[1] + BLOCK_LENGTH - 1 - doorHalfHeight + TOOTH_HEIGHT);\n    this.c.lineTo(topLeftCorner[0] + ((4 / 5) * width), topLeftCorner[1] + BLOCK_LENGTH - 1 - doorHalfHeight);\n    this.c.lineTo(topLeftCorner[0] + width, topLeftCorner[1] + BLOCK_LENGTH - 1 - doorHalfHeight);\n    this.c.lineTo(topLeftCorner[0] + width, topLeftCorner[1] + BLOCK_LENGTH);\n    this.c.lineTo(topLeftCorner[0], topLeftCorner[1] + BLOCK_LENGTH);\n    this.c.closePath();\n    this.c.fillStyle = door.color;\n    this.c.fill();\n    this.c.strokeStyle = 'black';\n    this.c.stroke();\n  }\n};\n\nRenderer.prototype.drawPlatform = function (pos, topColor, bottomColor) {\n  var x = pos[0];\n  var y = pos[1];\n  var height = Math.floor(BLOCK_LENGTH / 3);\n  var grad = this.c.createLinearGradient(x, y, x, y + height);\n  grad.addColorStop(0, topColor);\n  grad.addColorStop(1, bottomColor);\n  this.drawRectangle({\n    x: x,\n    y: y,\n    width: BLOCK_LENGTH,\n    height: height,\n    fill: grad\n  });\n};\n\nRenderer.prototype.drawWireJunction = function (pos, wireJunction) {\n  if (wireJunction.segments[\"N\"]) {\n    this.drawRectangle({ // N\n      x: pos[0] + (BLOCK_LENGTH / 2) - 4.5,\n      y: pos[1] - 0.5,\n      width: 9,\n      height: (BLOCK_LENGTH / 2) - 4.5,\n      fill: wireJunction.segments[\"N\"].hasPower ? this.gradientArray[this.gradientIndex] : '#333',\n      stroke: 'none'\n    })\n  }\n  if (wireJunction.segments[\"E\"]) {\n    this.drawRectangle({ // E\n      x: pos[0] + (BLOCK_LENGTH / 2) + 4.5,\n      y: pos[1] + (BLOCK_LENGTH / 2) - 4.5,\n      width: (BLOCK_LENGTH / 2) - 4.5,\n      height: 9,\n      fill: wireJunction.segments[\"E\"].hasPower ? this.gradientArray[this.gradientIndex] : '#333',\n      stroke: 'none'\n    })\n  }\n  if (wireJunction.segments[\"S\"]) {\n    this.drawRectangle({ // S\n      x: pos[0] + (BLOCK_LENGTH / 2) - 4.5,\n      y: pos[1] + (BLOCK_LENGTH / 2) + 4.5,\n      width: 9,\n      height: (BLOCK_LENGTH / 2) - 4.5,\n      fill: wireJunction.segments[\"S\"].hasPower ? this.gradientArray[this.gradientIndex] : '#333',\n      stroke: 'none'\n    })\n  }\n  if (wireJunction.segments[\"W\"]) {\n    this.drawRectangle({ // W\n      x: pos[0] - 0.5,\n      y: pos[1] + (BLOCK_LENGTH / 2) - 4.5,\n      width: (BLOCK_LENGTH / 2) - 4.5,\n      height: 9,\n      fill: wireJunction.segments[\"W\"].hasPower ? this.gradientArray[this.gradientIndex] : '#333',\n      stroke: 'none'\n    })\n  }\n};\n\nRenderer.prototype.drawWire = function (pos, wire) {\n  if (wire.hasPower) {\n    var fill = this.gradientArray[this.gradientIndex]\n  } else {\n    var fill = '#333';\n  }\n  if (wire.type === \"EW\") {\n    this.drawRectangle({\n      x: pos[0] - 0.5,\n      y: pos[1] + (BLOCK_LENGTH / 2) - 4.5,\n      width: BLOCK_LENGTH + 0.5,\n      height: 9,\n      fill: fill,\n      stroke: 'none'\n    })\n  } else if (wire.type === \"NS\") {\n    this.drawRectangle({\n      x: pos[0] + (BLOCK_LENGTH / 2) - 4.5,\n      y: pos[1] - 0.5,\n      width: 9,\n      height: BLOCK_LENGTH + 0.5,\n      fill: fill,\n      stroke: 'none'\n    })\n  } else if (wire.type === \"ES\") {\n    this.c.beginPath();\n    this.c.moveTo(pos[0] + BLOCK_LENGTH, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + BLOCK_LENGTH);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + BLOCK_LENGTH);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + BLOCK_LENGTH / 2 + 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH, pos[1] + BLOCK_LENGTH / 2 + 4.5);\n    this.c.closePath();\n    this.c.fillStyle = fill;\n    this.c.fill();\n  } else if (wire.type === \"ESW\") {\n    this.c.beginPath();\n    this.c.moveTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + BLOCK_LENGTH);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + BLOCK_LENGTH);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.closePath();\n    this.c.fillStyle = fill;\n    this.c.fill();\n  } else if (wire.type === \"WS\") {\n    this.c.beginPath();\n    this.c.moveTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + BLOCK_LENGTH);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + BLOCK_LENGTH);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + BLOCK_LENGTH / 2 + 4.5);\n    this.c.lineTo(pos[0] - 0.5, pos[1] + BLOCK_LENGTH / 2 + 4.5);\n    this.c.closePath();\n    this.c.fillStyle = fill;\n    this.c.fill();\n  } else if (wire.type === \"NE\") {\n    this.c.beginPath();\n    this.c.moveTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] - 0.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] - 0.5);\n    this.c.fillStyle = fill;\n    this.c.fill();\n  } else if (wire.type === \"NW\") {\n    this.c.beginPath();\n    this.c.moveTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] - 0.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) - 4.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4.5, pos[1] - 0.5);\n    this.c.fillStyle = fill;\n    this.c.fill();\n  } else if (wire.type === \"NSW\") {\n    this.drawRectangle({\n      x: pos[0] + (BLOCK_LENGTH / 2) - 4.5,\n      y: pos[1] - 0.5,\n      width: 9,\n      height: BLOCK_LENGTH + 0.5,\n      fill: fill,\n      stroke: 'none'\n    })\n    this.c.beginPath();\n    this.c.moveTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2), pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2), pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] - 0.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.closePath();\n    this.c.fillStyle = fill;\n    this.c.fill();\n  } else if (wire.type === \"NSE\") {\n    this.drawRectangle({\n      x: pos[0] + (BLOCK_LENGTH / 2) - 4.5,\n      y: pos[1] - 0.5,\n      width: 9,\n      height: BLOCK_LENGTH + 0.5,\n      fill: fill,\n      stroke: 'none'\n    })\n    this.c.beginPath();\n    this.c.moveTo(pos[0] + (BLOCK_LENGTH / 2) + 4, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH + 0.5, pos[1] + (BLOCK_LENGTH / 2) - 4.5);\n    this.c.lineTo(pos[0] + BLOCK_LENGTH + 0.5, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.lineTo(pos[0] + (BLOCK_LENGTH / 2) + 4, pos[1] + (BLOCK_LENGTH / 2) + 4.5);\n    this.c.closePath();\n    this.c.fillStyle = fill;\n    this.c.fill();\n  }\n};\n\nRenderer.prototype.drawCubby = function (pos, cubby) {\n  var x = pos[0] + 15;\n  var y = pos[1] + 15;\n  this.drawRectangle({\n    x: x,\n    y: y,\n    width: 44,\n    height: 44,\n    fill: '#333'\n  });\n  var CUBBY_THICKNESS = 5;\n  var x2 = x + CUBBY_THICKNESS;\n  var y2 = y + CUBBY_THICKNESS;\n  this.drawRectangle({\n    x: x2,\n    y: y2,\n    width: 34,\n    height: 34,\n    fill: '#1C1C1C'\n  });\n  if (cubby.item) {\n    cubby.item.render(this.c, [x2, y2], 34, false);\n  } else {\n    this.drawLine([x2, y2], [x2 + 34, y2 + 34]);\n    this.drawLine([x2 + 34, y2], [x2, y2 + 34]);\n    var CUBBY_DEPTH = 6;\n    var x3 = x2 + CUBBY_DEPTH;\n    var y3 = y2 + CUBBY_DEPTH;\n    this.drawRectangle({\n      x: x3,\n      y: y3,\n      width: 22,\n      height: 22,\n      fill: '#1C1C1C'\n    });\n  }\n};\n\nRenderer.prototype.drawBrick = function (pos, color, leftEdges) {\n  var x = pos[0];\n  var y = pos[1];\n  var rowHeight = (BLOCK_LENGTH / 4);\n  this.drawOuterSquare(pos, color, color);\n  this.c.strokeStyle = '#000';\n}\n\nRenderer.prototype.drawButtonBlock = function (buttonBlock, pos) {\n  this.drawPowerBlock(pos, buttonBlock.hasPower);\n  var buttonPanelX;\n  if (buttonBlock.side === \"left\") {\n    buttonPanelX = pos[0] - this.BUTTON_PANEL_WIDTH\n  } else {\n    buttonPanelX = pos[0] + BLOCK_LENGTH - 1\n  }\n  var buttonPanelY = pos[1] + ((BLOCK_LENGTH - this.BUTTON_PANEL_HEIGHT) / 2) + 0.5\n  var grad = this.c.createLinearGradient(\n    buttonPanelX,\n    buttonPanelY,\n    buttonPanelX,\n    buttonPanelY + this.BUTTON_PANEL_HEIGHT\n  );\n  grad.addColorStop(0, '#858181');\n  grad.addColorStop(1, '#434242');\n  this.drawRectangle({\n    x: buttonPanelX,\n    y: buttonPanelY,\n    width: this.BUTTON_PANEL_WIDTH,\n    height: this.BUTTON_PANEL_HEIGHT,\n    fill: grad\n  });\n  const BUTTON_WIDTH = 5;\n  const BUTTON_HEIGHT = 8;\n  var buttonX;\n  if (buttonBlock.side === \"left\") {\n    buttonX = buttonPanelX - BUTTON_WIDTH;\n  } else {\n    buttonX = buttonPanelX + this.BUTTON_PANEL_WIDTH;\n  }\n  this.drawRectangle({\n    x: buttonX,\n    y: buttonPanelY + ((this.BUTTON_PANEL_HEIGHT - BUTTON_HEIGHT) / 2),\n    width: BUTTON_WIDTH,\n    height: BUTTON_HEIGHT,\n    fill: buttonBlock.color\n  });\n};\n\nRenderer.prototype.drawSpringPowerUp = function (pos) {\n  this.drawRectangle({\n    x: pos[0] + 25,\n    y: pos[1] + 15,\n    fill: 'yellow',\n    width: 25,\n    height: 5\n  })\n  this.drawRectangle({\n    x: pos[0] + 25,\n    y: pos[1] + 15 + 40,\n    fill: 'yellow',\n    width: 25,\n    height: 5\n  })\n  var rightMiddleDotPos = [pos[0] + 25 + 12.5 + 8, pos[1] + 15 + 5 + 17.5];\n  var leftMiddleDotPos = [pos[0] + 25 + 4.5, pos[1] + 15 + 5 + 17.5];\n  this.drawDot([pos[0] + 25 + 12.5, pos[1] + 15 + 5 + 8.75]);\n  this.drawDot(leftMiddleDotPos);\n  this.drawDot(rightMiddleDotPos);\n  this.drawDot([pos[0] + 25 + 12.5, pos[1] + 15 + 5 + 26.25]);\n  this.drawLine([pos[0] + 25 + 4.5, pos[1] + 15 + 5], rightMiddleDotPos);\n  this.drawLine([pos[0] + 25 + 12.5 + 8, pos[1] + 15 + 5], leftMiddleDotPos);\n  this.drawLine(rightMiddleDotPos, [leftMiddleDotPos[0], pos[1] + 15 + 5 + 35]);\n  this.drawLine(leftMiddleDotPos, [rightMiddleDotPos[0], pos[1] + 15 + 5 + 35]);\n};\n\nRenderer.prototype.drawForceFieldBlock = function (pos, FFBlock) {\n  this.drawPowerBlock(pos, FFBlock.hasPower);\n  var shellColor = '#D5D4C9';\n  this.drawForceEmitter([pos[0] + 4, pos[1] + BLOCK_LENGTH - 1], shellColor);\n  this.drawForceEmitter([pos[0] + 27, pos[1] + BLOCK_LENGTH - 1], shellColor);\n  this.drawForceEmitter([pos[0] + 47, pos[1] + BLOCK_LENGTH - 1], shellColor);\n  this.drawForceEmitter([pos[0] + 70, pos[1] + BLOCK_LENGTH - 1], shellColor);\n};\n\nRenderer.prototype.drawForceEmitter = function (pos, fill) {\n  this.c.beginPath();\n  this.c.arc(\n    pos[0],\n    pos[1],\n    4, Math.PI, 2 * Math.PI, false\n  );\n  this.c.closePath();\n  this.c.fillStyle = fill;\n  this.c.fill();\n  this.c.stroke();\n};\n\nRenderer.prototype.drawForceField = function (pos) {\n  this.drawForceLine([pos[0] + 4, pos[1]]);\n  this.drawForceLine([pos[0] + 27, pos[1]]);\n  this.drawForceLine([pos[0] + 47, pos[1]]);\n  this.drawForceLine([pos[0] + 70, pos[1]]);\n};\n\nRenderer.prototype.drawForceLine = function (pos) {\n  var fill = this.seconds % 2 === 0 ? '#fff' : 'blue'\n  this.drawRectangle({\n    x: pos[0] - 2,\n    y: pos[1],\n    width: 4,\n    height: BLOCK_LENGTH,\n    fill: fill,\n    stroke: 'none'\n  })\n};\n\nRenderer.prototype.drawPowerBlock = function (pos, power) {\n  var grad = power ? this.gradientArray[this.gradientIndex] : '#333';\n  this.drawOuterSquare(pos, '#000', grad);\n  this.drawRectangle({\n    x: pos[0] + EDGE_TO_INNER,\n    y: pos[1] + EDGE_TO_INNER,\n    width: INNER_RECT_LENGTH,\n    height: INNER_RECT_LENGTH\n  });\n};\n\nRenderer.prototype.drawBlock = function (pos) {\n  var x = pos[0];\n  var y = pos[1];\n  var frontGrad = this.c.createLinearGradient(x, y, x, y + 75);\n  frontGrad.addColorStop(0, '#2c2929');\n  frontGrad.addColorStop(1, '#161515');\n  var backGrad = this.c.createLinearGradient(x, y, x, y + 75);\n  backGrad.addColorStop(0, '#292626');\n  backGrad.addColorStop(1, '#000000');\n  this.drawOuterSquare(pos, '#000', frontGrad);\n  const TRI_LENGTH = 40;\n  const START_TRIANGLE = EDGE_TO_INNER + ((INNER_RECT_LENGTH - TRI_LENGTH) / 2);\n  //left triangle\n  this.c.fillStyle = backGrad;\n  this.c.beginPath();\n  this.c.moveTo(x + EDGE_TO_INNER, y + START_TRIANGLE);\n  this.c.lineTo(x + EDGE_TO_INNER, y + START_TRIANGLE + TRI_LENGTH);\n  this.c.lineTo(x + EDGE_TO_INNER + (TRI_LENGTH / 2), y + START_TRIANGLE + (TRI_LENGTH / 2));\n  this.c.closePath();\n  this.c.fill();\n  this.c.stroke();\n  //top triangle\n  this.c.beginPath();\n  this.c.moveTo(x + START_TRIANGLE, y + EDGE_TO_INNER);\n  this.c.lineTo(x + START_TRIANGLE + TRI_LENGTH, y + EDGE_TO_INNER);\n  this.c.lineTo(x + START_TRIANGLE + (TRI_LENGTH / 2), y + EDGE_TO_INNER + (TRI_LENGTH / 2));\n  this.c.closePath();\n  this.c.fill();\n  this.c.stroke();\n  //right triangle\n  this.c.beginPath();\n  this.c.moveTo(x + BLOCK_LENGTH - EDGE_TO_INNER, y + START_TRIANGLE);\n  this.c.lineTo(x + BLOCK_LENGTH - EDGE_TO_INNER, y + START_TRIANGLE + TRI_LENGTH);\n  this.c.lineTo(x + BLOCK_LENGTH - EDGE_TO_INNER - (TRI_LENGTH / 2), y + START_TRIANGLE + (TRI_LENGTH / 2));\n  this.c.closePath();\n  this.c.fill();\n  this.c.stroke();\n  //bottom triangle\n  this.c.beginPath();\n  this.c.moveTo(x + START_TRIANGLE, y + BLOCK_LENGTH - EDGE_TO_INNER);\n  this.c.lineTo(x + START_TRIANGLE + TRI_LENGTH, y + BLOCK_LENGTH - EDGE_TO_INNER);\n  this.c.lineTo(x + START_TRIANGLE + (TRI_LENGTH / 2), y + BLOCK_LENGTH - EDGE_TO_INNER - (TRI_LENGTH / 2));\n  this.c.closePath();\n  this.c.fill();\n  this.c.stroke();\n}\n\nRenderer.prototype.drawOuterSquare = function (pos, stroke, fill) {\n  this.drawRectangle({\n    x: pos[0],\n    y: pos[1],\n    width: BLOCK_LENGTH - 1,\n    height: BLOCK_LENGTH - 1,\n    stroke: stroke,\n    fill: fill\n  });\n}\n\nRenderer.prototype.drawDot = function (pos) {\n  this.drawFullCircle({\n    pos: pos,\n    fill: 'black',\n    radius: 2\n  })\n};\n\nRenderer.prototype.blackBackground = function () {\n  this.drawRectangle({\n    x: 0,\n    y: 0,\n    width: 600,\n    height: 450,\n    fill: 'black'\n  })\n};\n\nRenderer.prototype.drawFullCircle = function (options) {\n  this.c.beginPath();\n  this.c.arc(\n    options.pos[0],\n    options.pos[1],\n    options.radius, 0, 2 * Math.PI, false\n  );\n  this.c.fillStyle = options.fill;\n  this.c.fill();\n};\n\nRenderer.prototype.drawLine = function (start, finish) {\n  this.c.beginPath();\n  this.c.moveTo(start[0], start[1]);\n  this.c.lineTo(finish[0], finish[1]);\n  this.c.lineWidth = 1;\n  this.c.stroke();\n}\n\nRenderer.prototype.drawRectangle = function (object) {\n  var x = object.x;\n  var y = object.y;\n  var width = object.width;\n  var height = object.height;\n  var stroke = object.stroke || '#000';\n  var fill = object.fill || undefined;\n  this.c.globalAlpha = object.alpha || 1;\n  this.c.beginPath();\n  this.c.rect(x, y, width, height);\n  if (fill !== undefined) {\n    this.c.fillStyle = fill;\n    this.c.fill();\n  }\n  if (stroke !== 'none') {\n    this.c.strokeStyle = stroke;\n    this.c.stroke();\n  }\n};\n\nRenderer.prototype.drawFrame = function (object) {\n  var x = object.x;\n  var y = object.y;\n  var width = object.width;\n  var height = object.height;\n  var thickness = object.thickness;\n  var stroke = object.stroke || '#000';\n  var fill = object.fill || undefined;\n  this.c.beginPath();\n  this.c.rect(x, y, width, thickness);\n  if (fill !== undefined) {\n    this.c.fillStyle = fill;\n    this.c.fill();\n  }\n  this.c.beginPath();\n  this.c.rect(x, y, thickness, height);\n  if (fill !== undefined) {\n    this.c.fillStyle = fill;\n    this.c.fill();\n  }\n  this.c.beginPath();\n  this.c.rect(x + width - thickness, y, thickness, height);\n  if (fill !== undefined) {\n    this.c.fillStyle = fill;\n    this.c.fill();\n  }\n  this.c.beginPath();\n  this.c.rect(x, y + height - thickness, width, thickness);\n  if (fill !== undefined) {\n    this.c.fillStyle = fill;\n    this.c.fill();\n  }\n  this.c.beginPath();\n  this.c.rect(x, y, width, height);\n  this.c.strokeStyle = stroke;\n  this.c.stroke();\n\n  this.c.beginPath();\n  this.c.rect(x + thickness, y + thickness, width - (thickness * 2), height - (thickness * 2));\n  this.c.strokeStyle = stroke;\n  this.c.stroke();\n};\n\nRenderer.prototype.incrementDoors = function () {\n  this.game.currentLevel.doors.forEach(function (door) {\n    if (door.status === \"opening\") {\n      door.percentOpen = door.percentOpen + 0.02;\n      if (door.percentOpen >= 1.5) {\n        door.status = \"open\";\n      }\n    } else if (door.status === \"closing\") {\n      door.percentOpen = door.percentOpen - 0.02;\n      if (door.percentOpen <= 0) {\n        door.status = \"closed\";\n      }\n    }\n  });\n};\n\nRenderer.prototype.incrementGradientIndex = function () {\n  this.gradientIndex = this.gradientIndex + (1 * this.gradientSign)\n  if (this.gradientIndex === this.gradientArray.length) {\n    this.gradientSign = -1;\n    this.gradientIndex = this.gradientArray.length - 2\n  } else if (this.gradientIndex === -1) {\n    this.gradientSign = 1;\n    this.gradientIndex = 1;\n  }\n};\n\nRenderer.prototype.incrementTime = function () {\n  this.seconds += 1;\n  if (this.seconds > 100) {\n    this.seconds = 0;\n  }\n  if (this.game.levelFlashSeconds > 0) {\n    this.game.levelFlashSeconds -= 1\n  }\n};\n\nRenderer.prototype.fillGradientArray = function (rgbColor, arrayLength) {\n  returnArray = [rgbColor];\n  for (var i = 0; i < arrayLength; i++) {\n    rgbColor = this.shadeRGBColor(rgbColor, -0.02)\n    returnArray.push(rgbColor);\n  }\n  return returnArray;\n};\n\nRenderer.prototype.shadeRGBColor = function (color, percent) {\n    var f = color.split(\",\");\n    var t = percent < 0 ? 0 : 255;\n    var p = percent < 0 ? percent * -1 : percent;\n    var R = parseInt(f[0].slice(4));\n    var G = parseInt(f[1]);\n    var B = parseInt(f[2]);\n    return \"rgb(\"+(Math.round((t-R)*p)+R)+\",\"+(Math.round((t-G)*p)+G)+\",\"+(Math.round((t-B)*p)+B)+\")\";\n}\n\nmodule.exports = Renderer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/renderer.js\n ** module id = 1\n ** module chunks = 0\n **/","var PowerObject = require('./powerObject');\n\nfunction Wire(options) {\n  this.initializePowerObject(options);\n  this.type = options.type;\n}\n\nvar Surrogate = function () {};\nSurrogate.prototype = PowerObject.prototype;\nWire.prototype = new Surrogate();\nWire.prototype.constructor = Wire;\n\nmodule.exports = Wire;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/wire.js\n ** module id = 2\n ** module chunks = 0\n **/","function PowerObject() {}\n\nPowerObject.prototype.initializePowerObject = function (options) {\n  this.hasPower = false;\n  this.id = options.id;\n  this.rowCol = options.rowCol;\n  this.toString = function () { return this.constructor.name };\n};\n\nPowerObject.prototype.sendPower = function (wiring, cubbies, buttonBlocks, forceFieldBlocks, flowing) {\n\n  var topRowCol = [this.rowCol[0] - 1, this.rowCol[1]];\n  var leftRowCol = [this.rowCol[0], this.rowCol[1] - 1];\n  var rightRowCol = [this.rowCol[0], this.rowCol[1] + 1];\n  var bottomRowCol = [this.rowCol[0] + 1, this.rowCol[1]];\n\n  //if object is a Power Source, send power in all four directions\n  if (this.constructor.name == 'PowerSource') {\n    this.type = \"NESW\"\n  }\n\n  //look through wires:\n  for (var i = 0; i < wiring.length; i++) {\n    if (this.type.split(\"\").indexOf(\"W\") !== -1) {\n      if (wiring[i].rowCol[0] === leftRowCol[0] && wiring[i].rowCol[1] === leftRowCol[1] && flowing !== \"rightward\") {\n        wiring[i].hasPower = true;\n        wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"leftward\");\n      }\n    }\n    if (this.type.split(\"\").indexOf(\"N\") !== -1) {\n      if (wiring[i].rowCol[0] === topRowCol[0] && wiring[i].rowCol[1] === topRowCol[1] && flowing !== \"downward\") {\n        wiring[i].hasPower = true;\n        wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"upward\");\n      }\n    }\n    if (this.type.split(\"\").indexOf(\"E\") !== -1) {\n      if (wiring[i].rowCol[0] === rightRowCol[0] && wiring[i].rowCol[1] === rightRowCol[1] && flowing !== \"leftward\") {\n        wiring[i].hasPower = true;\n        wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"rightward\");\n      }\n    }\n    if (this.type.split(\"\").indexOf(\"S\") !== -1) {\n      if (wiring[i].rowCol[0] === bottomRowCol[0] && wiring[i].rowCol[1] === bottomRowCol[1] && flowing !== \"upward\") {\n        wiring[i].hasPower = true;\n        wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"downward\");\n      }\n    }\n  }\n\n  //look through force field blocks:\n  for (var i = 0; i < forceFieldBlocks.length; i++) {\n    if (forceFieldBlocks[i].rowCol[0] === leftRowCol[0] && forceFieldBlocks[i].rowCol[1] === leftRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n    if (forceFieldBlocks[i].rowCol[0] === topRowCol[0] && forceFieldBlocks[i].rowCol[1] === topRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n    if (forceFieldBlocks[i].rowCol[0] === rightRowCol[0] && forceFieldBlocks[i].rowCol[1] === rightRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n    if (forceFieldBlocks[i].rowCol[0] === bottomRowCol[0] && forceFieldBlocks[i].rowCol[1] === bottomRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n  }\n\n  //look through button blocks:\n  for (var i = 0; i < buttonBlocks.length; i++) {\n    if (buttonBlocks[i].rowCol[0] === leftRowCol[0] && buttonBlocks[i].rowCol[1] === leftRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n    if (buttonBlocks[i].rowCol[0] === topRowCol[0] && buttonBlocks[i].rowCol[1] === topRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n    if (buttonBlocks[i].rowCol[0] === rightRowCol[0] && buttonBlocks[i].rowCol[1] === rightRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n    if (buttonBlocks[i].rowCol[0] === bottomRowCol[0] && buttonBlocks[i].rowCol[1] === bottomRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n  }\n}\n\nmodule.exports = PowerObject;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/powerObject.js\n ** module id = 3\n ** module chunks = 0\n **/","var WireSegment = require('./wireSegment.js');\n\nfunction WireJunction(options) {\n  this.id = options.id;\n  this.rowCol = options.rowCol;\n  this.segmentStrings = options.segmentStrings;\n  this.segments = {};\n  for (var i = 0; i < this.segmentStrings.length; i++) {\n    if (this.segmentStrings[i] === \"N\") {\n      this.segments['N'] = new WireSegment({ id: \"N\" });\n    } else if (this.segmentStrings[i] === \"E\") {\n      this.segments['E'] = new WireSegment({ id: \"E\" });\n    } else if (this.segmentStrings[i] === \"S\") {\n      this.segments['S'] = new WireSegment({ id: \"S\" });\n    } else if (this.segmentStrings[i] === \"W\") {\n      this.segments['W'] = new WireSegment({ id: \"W\" });\n    }\n  }\n}\n\nWireJunction.prototype.sendPower = function (wiring, cubbies, buttonBlocks, forceFieldBlocks, flowing) {\n  var cubby;\n  for (var i = 0; i < cubbies.length; i++) {\n    if (cubbies[i].rowCol[0] === this.rowCol[0] && cubbies[i].rowCol[1] === this.rowCol[1]) {\n      cubby = cubbies[i];\n      break;\n    }\n  }\n\n  if (flowing === \"leftward\" && this.segments['E']) {\n    this.segments['E'].hasPower = true;\n    this.giveItemPower(cubby.item, 'E');\n  } else if (flowing === \"rightward\" && this.segments['W']) {\n    this.segments['W'].hasPower = true;\n    this.giveItemPower(cubby.item, 'W');\n  } else if (flowing === \"upward\" && this.segments['S']) {\n    this.giveItemPower(cubby.item, 'S');\n    this.segments['S'].hasPower = true;\n  } else if (flowing === \"downward\" && this.segments['N']) {\n    this.giveItemPower(cubby.item, 'N');\n    this.segments['N'].hasPower = true;\n  }\n\n  if (cubby.item) {\n    if (cubby.item.hasPower) {\n      for (var i = 0; i < cubby.item.segments.length; i++) {\n        if (this.segments[cubby.item.segments[i]]) {\n          this.segments[cubby.item.segments[i]].hasPower = true;\n        }\n      }\n      this.sendPowerFromItem(cubby.item, wiring, cubbies, buttonBlocks, forceFieldBlocks, flowing);\n    }\n  }\n}\n\nWireJunction.prototype.giveItemPower = function (item, side) {\n  if (item && item.segments.indexOf(side) !== -1) {\n    item.hasPower = true;\n  }\n};\n\nWireJunction.prototype.sendPowerFromItem = function (item, wiring, cubbies, buttonBlocks, forceFieldBlocks, flowing) {\n\n  var topRowCol = [this.rowCol[0] - 1, this.rowCol[1]];\n  var leftRowCol = [this.rowCol[0], this.rowCol[1] - 1];\n  var rightRowCol = [this.rowCol[0], this.rowCol[1] + 1];\n  var bottomRowCol = [this.rowCol[0] + 1, this.rowCol[1]];\n\n  //look through wires:\n  for (var i = 0; i < wiring.length; i++) {\n    if (item.segments.indexOf(\"W\") !== -1 && this.segments[\"W\"] && wiring[i].rowCol[0] === leftRowCol[0] && wiring[i].rowCol[1] === leftRowCol[1] && flowing !== \"rightward\") {\n      wiring[i].hasPower = true;\n      wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"leftward\");\n    }\n    if (item.segments.indexOf(\"N\") !== -1 && this.segments[\"N\"] && wiring[i].rowCol[0] === topRowCol[0] && wiring[i].rowCol[1] === topRowCol[1] && flowing !== \"downward\") {\n      wiring[i].hasPower = true;\n      wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"upward\");\n    }\n    if (item.segments.indexOf(\"E\") !== -1 && this.segments[\"E\"] && wiring[i].rowCol[0] === rightRowCol[0] && wiring[i].rowCol[1] === rightRowCol[1] && flowing !== \"leftward\") {\n      wiring[i].hasPower = true;\n      wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"rightward\");\n    }\n    if (item.segments.indexOf(\"S\") !== -1 && this.segments[\"S\"] && wiring[i].rowCol[0] === bottomRowCol[0] && wiring[i].rowCol[1] === bottomRowCol[1] && flowing !== \"upward\") {\n      wiring[i].hasPower = true;\n      wiring[i].sendPower(wiring, cubbies, buttonBlocks, forceFieldBlocks, \"downward\");\n    }\n  }\n\n  //look through button blocks:\n  for (var i = 0; i < buttonBlocks.length; i++) {\n    if (buttonBlocks[i].rowCol[0] === leftRowCol[0] && buttonBlocks[i].rowCol[1] === leftRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n    if (buttonBlocks[i].rowCol[0] === topRowCol[0] && buttonBlocks[i].rowCol[1] === topRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n    if (buttonBlocks[i].rowCol[0] === rightRowCol[0] && buttonBlocks[i].rowCol[1] === rightRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n    if (buttonBlocks[i].rowCol[0] === bottomRowCol[0] && buttonBlocks[i].rowCol[1] === bottomRowCol[1]) {\n      buttonBlocks[i].hasPower = true;\n    }\n  }\n\n  //look through force field blocks:\n  for (var i = 0; i < forceFieldBlocks.length; i++) {\n    if (item.segments.indexOf(\"W\") !== -1 && this.segments[\"W\"] && forceFieldBlocks[i].rowCol[0] === leftRowCol[0] && forceFieldBlocks[i].rowCol[1] === leftRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n    if (item.segments.indexOf(\"N\") !== -1 && this.segments[\"N\"] && forceFieldBlocks[i].rowCol[0] === topRowCol[0] && forceFieldBlocks[i].rowCol[1] === topRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n    if (item.segments.indexOf(\"E\") !== -1 && this.segments[\"E\"] && forceFieldBlocks[i].rowCol[0] === rightRowCol[0] && forceFieldBlocks[i].rowCol[1] === rightRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n    if (item.segments.indexOf(\"S\") !== -1 && this.segments[\"S\"] && forceFieldBlocks[i].rowCol[0] === bottomRowCol[0] && forceFieldBlocks[i].rowCol[1] === bottomRowCol[1]) {\n      forceFieldBlocks[i].hasPower = true;\n    }\n  }\n};\n\nmodule.exports = WireJunction;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/wireJunction.js\n ** module id = 4\n ** module chunks = 0\n **/","function WireSegment(options) {\n  this.id = options.id;\n  this.hasPower = false;\n}\n\nmodule.exports = WireSegment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/wireSegment.js\n ** module id = 5\n ** module chunks = 0\n **/","function Robot(startingPos) {\n  this.pos = startingPos;\n  this.speed = 256;\n  this.height = 0;\n  this.maxHeight = 0;\n};\n\nmodule.exports = Robot;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/robot.js\n ** module id = 6\n ** module chunks = 0\n **/","function Door(id, side, color) {\n  this.toString = function () { return \"door\" };\n  this.id = id;\n  this.status = \"closed\";\n  this.percentOpen = 0;\n  this.aniFrame = undefined;\n  this.side = side;\n  this.color = color || 'red';\n};\n\nDoor.prototype.open = function () {\n  if(this.status !== \"open\") {\n    this.status = \"opening\";\n  }\n};\n\nDoor.prototype.close = function () {\n  if(this.status !== \"closed\") {\n    this.status = \"closing\";\n  }\n};\n\nmodule.exports = Door;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/door.js\n ** module id = 7\n ** module chunks = 0\n **/","var PowerObject = require('./powerObject');\n\nfunction ButtonBlock(options) {\n  this.initializePowerObject(options);\n  this.side = options.side;\n  this.pushFunc = options.func;\n  this.color = options.color || 'red';\n}\n\nvar Surrogate = function () {};\nSurrogate.prototype = PowerObject.prototype;\nButtonBlock.prototype = new Surrogate();\nButtonBlock.prototype.constructor = ButtonBlock;\n\nmodule.exports = ButtonBlock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/buttonBlock.js\n ** module id = 8\n ** module chunks = 0\n **/","function Cubby(options) {\n  this.id = options.id;\n  this.rowCol = options.rowCol;\n  this.item = options.startItem;\n\n  this.toString = function () { return \"cubby\" };\n}\n\nmodule.exports = Cubby;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/cubby.js\n ** module id = 9\n ** module chunks = 0\n **/","var Renderer = require('./renderer.js')\n\nfunction Panel(segments) {\n  this.segments = segments || [];\n  this.hasPower = false;\n}\n\nPanel.prototype.render = function (context, pos, length, power) {\n  var thickness = (length / 3);\n  var x = pos[0];\n  var y = pos[1];\n  context.beginPath();\n  context.rect(x, y, length, length);\n  context.fillStyle = '#333';\n  context.fill();\n  context.strokeStyle = '#000';\n  context.stroke();\n\n  switch (this.segments.join(\"\")) {\n    case \"EW\":\n      y += (length / 2) - (thickness / 2) + 0.5;\n      context.beginPath();\n      context.rect(x, y, length, thickness);\n      break;\n    case \"NS\":\n      x += (length / 2) - (thickness / 2) + 0.5;\n      context.beginPath();\n      context.rect(x, y, thickness, length);\n      break;\n    case \"SW\":\n      y += (length / 2) - (thickness / 2) + 0.5;\n      context.beginPath();\n      context.moveTo(x, y);\n      context.lineTo(x += (length / 2) + (thickness / 2) + 0.5, y);\n      context.lineTo(x, y += (thickness / 2) + (length / 2) - 0.5);\n      context.lineTo(x -= thickness, y);\n      context.lineTo(x, y -= (length / 2) - (thickness / 2) - 0.5);\n      context.lineTo(x -= ((length / 2) - (thickness / 2) + 0.5), y);\n      context.closePath();\n      break;\n    case \"NE\":\n      x += (length / 2) - (thickness / 2) + 0.5;\n      context.beginPath();\n      context.moveTo(x, y);\n      context.lineTo(x, y += (thickness / 2) + (length / 2) - 0.5);\n      context.lineTo(x += (length / 2) + (thickness / 2) - 0.5, y);\n      context.lineTo(x, y -= thickness);\n      context.lineTo(x -= (length / 2) - (thickness / 2), y);\n      context.lineTo(x, y -= (length / 2) - (thickness / 2) - 0.5);\n      context.closePath();\n      break;\n    case \"ESW\":\n      y += (length / 2) - (thickness / 2) + 0.5;\n      context.beginPath();\n      context.moveTo(x, y);\n      context.lineTo(x += length, y);\n      context.lineTo(x, y += thickness);\n      context.lineTo(x -= ((length / 2) - (thickness / 2)), y);\n      context.lineTo(x, y += (length / 2) - (thickness / 2) - 0.5);\n      context.lineTo(x -= ((length / 2) - (thickness / 2)), y);\n      context.lineTo(x, y -= ((length / 2) - (thickness / 2)));\n      context.lineTo(x -= ((length / 2) - (thickness / 2)), y);\n      context.closePath();\n      break;\n    case \"ENW\":\n      y += (length / 2) - (thickness / 2) + 0.5;\n      context.beginPath();\n      context.moveTo(x, y);\n      context.lineTo(x += (length / 2) - (thickness / 2) + 0.5, y);\n      context.lineTo(x, y -= (length / 2) - (thickness / 2) + 0.5);\n      context.lineTo(x += thickness, y);\n      context.lineTo(x, y += (length / 2) - (thickness / 2) + 0.5);\n      context.lineTo(x += (length / 2) - (thickness / 2) - 0.5, y);\n      context.lineTo(x, y += thickness);\n      context.lineTo(x -= length, y);\n      context.closePath();\n      break;\n  }\n  context.fillStyle = '#484848';\n  context.fill();\n  context.strokeStyle = '#000';\n  context.stroke();\n};\n\nmodule.exports = Panel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/panel.js\n ** module id = 10\n ** module chunks = 0\n **/","var Robot = require('./robot.js');\nvar Renderer = require('./renderer.js');\nvar Wire = require('./wire.js');\nconst BLOCK_LENGTH = 75;\n\nfunction Game(renderer, levelSequence) {\n  this.renderer = renderer;\n  this.BLOCK_LENGTH = 75;\n  this.levelSequence = levelSequence;\n  this.origin = [0, 0]\n  this.keysDown = {};\n  this.spaceTime = 0;\n  this.mainLoopRunning = false;\n  this.tutorialPage = 0;\n}\n\nGame.prototype.startGame = function () {\n  this.status = \"loading\";\n  this.renderer.displayLoadScreen();\n};\n\nGame.prototype.showMainMenu = function () {\n  this.status = \"menu\";\n  this.renderer.displayMenu();\n};\n\nGame.prototype.startLevel = function () {\n  this.currentLevel = this.levelSequence[0];\n  if (this.currentLevel.name) {\n    this.renderer.showLevelName = true;\n    var flashN = 5;\n    var levelFlash = window.setInterval(function () {\n      flashN = this.renderer.toggleLevelName(flashN);\n      if (flashN === 0) {\n        clearInterval(levelFlash);\n      }\n    }.bind(this), 600);\n  }\n  this.levelWidth = this.currentLevel.backgroundGrid[0].length * this.BLOCK_LENGTH;\n  this.levelHeight = this.currentLevel.backgroundGrid.length * this.BLOCK_LENGTH;\n  if (this.currentLevel.backgroundGrid.length !== this.currentLevel.foregroundGrid.length ||\n    this.currentLevel.backgroundGrid[0].length !== this.currentLevel.foregroundGrid[0].length) {\n      throw \"foregroundGrid and backgroundGrid dimensions don't match!\"\n  }\n\n  var robotX, robotY\n  if (this.currentLevel.startingPos[0] - 263.5 < 0) {\n    this.origin[0] = 0\n    robotX = this.currentLevel.startingPos[0]\n  } else {\n    this.origin[0] = this.currentLevel.startingPos[0] - 263.5;\n    robotX = 263.5\n  }\n  if (this.currentLevel.startingPos[1] - 187.5 < 0) {\n    this.origin[1] = 0\n    robotY = this.currentLevel.startingPos[1]\n  } else if ((this.currentLevel.foregroundGrid.length * BLOCK_LENGTH) - this.currentLevel.startingPos[1] < 187.5) {\n    this.origin[1] = (this.currentLevel.foregroundGrid.length * BLOCK_LENGTH) - 450;\n    robotY = this.currentLevel.startingPos[1] - this.origin[1]\n  } else {\n    this.origin[1] = this.currentLevel.startingPos[1] - 187.5;\n    robotY = 187.5\n  }\n  this.robot = new Robot([robotX, robotY]);\n  this.status = \"inControl\"\n  this.updatePower();\n  if (this.mainLoopRunning === false) {\n    this.mainLoopRunning = true;\n    this.main(Date.now());\n  }\n};\n\nGame.prototype.advanceLevel = function () {\n  this.levelSequence.shift();\n  if (this.levelSequence.length === 0) {\n    this.status = \"end screen\";\n  } else {\n    this.startLevel();\n  }\n};\n\nGame.prototype.main = function (passedThen) {\n  if (this.spaceTime > 0) {\n    this.spaceTime -= 1\n  }\n  var now = Date.now();\n  var delta = now - passedThen;\n  this.update(delta / 1000);\n  this.renderer.renderScreen();\n  newThen = now;\n  window.requestAnimationFrame(function () {\n    gameInstance.main(newThen);\n  });\n};\n\nGame.prototype.update = function (modifier) {\n  var realArrays = [this.origin, this.robot.pos]\n  var topRow = this.getTopRow(realArrays);\n  var bottomRow = this.getBottomRow(realArrays);\n  var leftCol = this.getLeftColumn(realArrays);\n  var rightCol = this.getRightColumn(realArrays);\n  var ghostArrays = [this.origin, this.robot.pos];\n  var aboveTopObj = null;\n  var topObj = null;\n  var bottomObj = null;\n\n  if (this.status === \"rising\" || this.status === \"finished\") {\n    ghostArrays = this.moveUp(this.elevatorArray[0].speed, modifier);\n    this.elevatorArray.forEach(function (elevator) {\n      elevator.additionalPixels += (elevator.speed * modifier);\n    }.bind(this))\n  } else if (this.status === \"descending\") {\n    ghostArrays = this.moveDown(this.elevatorArray[0].speed, modifier);\n    this.elevatorArray.forEach(function (elevator) {\n      elevator.additionalPixels -= (elevator.speed * modifier);\n    }.bind(this))\n  } else if (this.status === \"inControl\") {\n    this.checkForSpring(topRow, bottomRow, leftCol, rightCol);\n    if (38 in this.keysDown) { //up\n      this.handleVerticalKeys(leftCol, rightCol, topRow, bottomRow, \"up\");\n    } else if (40 in this.keysDown) { //down\n      this.handleVerticalKeys(leftCol, rightCol, topRow, bottomRow, \"down\");\n    }\n    if (39 in this.keysDown) { //right\n      ghostArrays = this.moveRight(this.robot.speed, modifier);\n      ghostCol = this.getRightColumn(ghostArrays);\n      aboveTopObj = this.currentLevel.foregroundGrid[topRow - 1][ghostCol];\n      topObj = this.currentLevel.foregroundGrid[topRow][ghostCol];\n      bottomObj = this.currentLevel.foregroundGrid[bottomRow][ghostCol];\n      bottomRightObj = this.currentLevel.foregroundGrid[bottomRow][ghostCol + 1];\n      if (this.passThrough(topObj, aboveTopObj, \"right\") === false || this.passThrough(bottomObj, topObj, \"right\") === false) {\n        robotX = this.getRealRightX(realArrays);\n        edge = 0.5 + (ghostCol * this.BLOCK_LENGTH) - 1;\n        difference = edge - robotX;\n        ghostArrays = this.moveRight(difference, 1);\n      } else if (bottomRightObj.toString() === \"ButtonBlock\") {\n        var buttonStuff = this.getLeftButtonEdge(ghostArrays);\n        if (buttonStuff != -1) {\n          var edge = buttonStuff[0];\n          var button = buttonStuff[1];\n          robotX = this.getRealRightX(realArrays);\n          difference = edge - robotX;\n          ghostArrays = this.moveRight(difference, 1);\n          if (button.hasPower) { button.pushFunc(button) };\n        }\n      } else if (bottomObj.toString() === \"door\") {\n        var edge = this.getLeftDoorEdge(ghostArrays, bottomObj)\n        if (edge !== -1) {\n          robotX = this.getRealRightX(realArrays);\n          difference = robotX - edge;\n          if (difference > 0) {\n            ghostArrays = this.moveLeft(difference, 1);\n          }\n        }\n      }\n    } else if (37 in this.keysDown) { //left\n      ghostArrays = this.moveLeft(this.robot.speed, modifier);\n      ghostCol = this.getLeftColumn(ghostArrays)\n      aboveTopObj = this.currentLevel.foregroundGrid[topRow - 1][ghostCol];\n      topObj = this.currentLevel.foregroundGrid[topRow][ghostCol];\n      bottomObj = this.currentLevel.foregroundGrid[bottomRow][ghostCol];\n      bottomLeftObj = this.currentLevel.foregroundGrid[bottomRow][ghostCol - 1];\n      if (this.passThrough(topObj, aboveTopObj, \"left\") === false || this.passThrough(bottomObj, topObj, \"left\") === false) {\n        robotX = this.getRealLeftX(realArrays);\n        edge = 0.5 + ((ghostCol + 1) * this.BLOCK_LENGTH);\n        difference = robotX - edge;\n        ghostArrays = this.moveLeft(difference, 1);\n      } else if (bottomLeftObj.toString() === \"ButtonBlock\") {\n        var buttonStuff = this.getRightButtonEdge(ghostArrays);\n        if (buttonStuff != -1) {\n          var edge = buttonStuff[0];\n          var button = buttonStuff[1];\n          robotX = this.getRealLeftX(realArrays);\n          difference = robotX - edge;\n          ghostArrays = this.moveLeft(difference, 1);\n          if (button.hasPower) { button.pushFunc(button) };\n        }\n      } else if (bottomObj.toString() === \"door\") {\n        var edge = this.getRightDoorEdge(ghostArrays, bottomObj)\n        if (edge != -1) {\n          robotX = this.getRealLeftX(realArrays);\n          difference = edge - robotX;\n          if (difference > 0) {\n            ghostArrays = this.moveRight(difference, 1);\n          }\n        }\n      }\n    } else if (32 in this.keysDown && this.spaceTime === 0) { //space\n      this.spaceTime = 20;\n      var robotLeft = this.getRealLeftX(realArrays);\n      var leftColumn = this.getLeftColumn(realArrays);\n      var leftEdge = (this.BLOCK_LENGTH * leftColumn) + 0.5;\n      var distanceToLeftEdge = robotLeft - leftEdge;\n      if (distanceToLeftEdge <= 15) {\n        var cubby = this.cubbyAt([topRow, leftColumn])\n        if (cubby && this.heightCloseEnough()) {\n          this.moveLeft(distanceToLeftEdge, 1);\n          this.swapCubbyItem(cubby);\n        }\n      } else {\n        var robotRight = this.getRealRightX(realArrays);\n        var rightColumn = this.getRightColumn(realArrays);\n        var rightEdge = this.BLOCK_LENGTH * (rightColumn + 1);\n        var distanceToRightEdge = rightEdge - robotRight;\n        if (distanceToRightEdge <= 15) {\n          var cubby = this.cubbyAt([topRow, rightColumn])\n          if (cubby && this.heightCloseEnough()) {\n            this.moveRight(distanceToRightEdge, 1);\n            this.swapCubbyItem(cubby);\n          }\n        }\n      }\n    }\n  }\n  var ghostHeight = (this.status === \"rising\" ? this.checkSpringHeight(ghostArrays) : undefined);\n  this.setGhostToReal(ghostArrays, ghostHeight);\n  if (this.status === \"rising\" || this.status === \"descending\") {\n    this.checkElevator();\n  }\n  if (this.status === \"finished\" && this.robot.pos[1] < -200) {\n    this.advanceLevel();\n  }\n};\n\nGame.prototype.checkSpringHeight = function (ghostArrays) {\n  var topRow = this.getTopRow(ghostArrays);\n  var leftCol = this.getLeftColumn(ghostArrays);\n  var rightCol = this.getRightColumn(ghostArrays);\n  if (this.passThrough(this.currentLevel.foregroundGrid[topRow][leftCol]) === false\n  || this.passThrough(this.currentLevel.foregroundGrid[topRow][rightCol]) === false) {\n    var realTopY = this.getRealTopY(ghostArrays)\n    var diff = this.getBlockRealBottomY(topRow) - this.getRealTopY(ghostArrays);\n    return this.robot.height - diff;\n  }\n};\n\nGame.prototype.cubbyAt = function (rowCol) {\n  for (var i = 0; i < this.currentLevel.cubbies.length; i++) {\n    if (this.currentLevel.cubbies[i].rowCol[0] === rowCol[0] && this.currentLevel.cubbies[i].rowCol[1] === rowCol[1]) {\n      return this.currentLevel.cubbies[i];\n    }\n  }\n};\n\nGame.prototype.heightCloseEnough = function () {\n  return (this.robot.height % BLOCK_LENGTH) <= 20\n};\n\nGame.prototype.swapCubbyItem = function (cubby) {\n  var itemFromCubby = cubby.item;\n  cubby.item = this.robot.item;\n  this.robot.item = itemFromCubby;\n  if (this.robot.item) {\n    this.robot.item.hasPower = false;\n  }\n  this.updatePower();\n};\n\nGame.prototype.checkForSpring = function (topRow, bottomRow, leftCol, rightCol) {\n  if (this.currentLevel.foregroundGrid[topRow][leftCol].toString() === \"spring\" && this.currentLevel.foregroundGrid[topRow][leftCol].pickedUp === false) {\n    this.getSpring(this.currentLevel.foregroundGrid[topRow][leftCol]);\n  }\n  if (this.currentLevel.foregroundGrid[topRow][rightCol].toString() === \"spring\" && this.currentLevel.foregroundGrid[topRow][rightCol].pickedUp === false) {\n    this.getSpring(this.currentLevel.foregroundGrid[topRow][rightCol]);\n  }\n  if (this.currentLevel.foregroundGrid[bottomRow][leftCol].toString() === \"spring\" && this.currentLevel.foregroundGrid[bottomRow][leftCol].pickedUp === false) {\n    this.getSpring(this.currentLevel.foregroundGrid[bottomRow][leftCol]);\n  }\n  if (this.currentLevel.foregroundGrid[bottomRow][rightCol].toString() === \"spring\" && this.currentLevel.foregroundGrid[bottomRow][rightCol].pickedUp === false) {\n    this.getSpring(this.currentLevel.foregroundGrid[bottomRow][rightCol]);\n  }\n};\n\nGame.prototype.getSpring = function (spring) {\n  spring.pickedUp = true;\n  this.robot.maxHeight += 75;\n};\n\nGame.prototype.updatePower = function () {\n  this.clearPower();\n  for (var i = 0; i < this.currentLevel.powerSources.length; i++) {\n    this.currentLevel.powerSources[i].sendPower(this.currentLevel.wiring, this.currentLevel.cubbies, this.currentLevel.buttonBlocks, this.currentLevel.forceFieldBlocks);\n  }\n};\n\nGame.prototype.clearPower = function () {\n  for (var i = 0; i < this.currentLevel.wiring.length; i++) {\n    if (this.currentLevel.wiring[i] instanceof Wire) {\n      this.currentLevel.wiring[i].hasPower = false;\n    } else {\n      Object.keys(this.currentLevel.wiring[i].segments).forEach(function (key) {\n        this.currentLevel.wiring[i].segments[key].hasPower = false;\n      }.bind(this))\n    }\n  }\n  for (var i = 0; i < this.currentLevel.forceFieldBlocks.length; i++) {\n    this.currentLevel.forceFieldBlocks[i].hasPower = false;\n  }\n  for (var i = 0; i < this.currentLevel.buttonBlocks.length; i++) {\n    this.currentLevel.buttonBlocks[i].hasPower = false;\n  }\n};\n\nGame.prototype.getLeftButtonEdge = function (arrays) {\n  var nextColumnToRight = this.getRightColumn(arrays) + 1\n  if (\n    this.currentLevel.foregroundGrid[\n      this.getTopRow(arrays)][nextColumnToRight].toString() === \"ButtonBlock\" &&\n      this.currentLevel.foregroundGrid[this.getTopRow(arrays)][nextColumnToRight].side === \"left\") {\n    var button = this.currentLevel.foregroundGrid[this.getTopRow(arrays)][nextColumnToRight];\n    var robotRightX = this.getRealRightX(arrays);\n    var blockRealRightX = this.getBlockRealRightX(this.getRightColumn(arrays));\n    var buttonEdge = blockRealRightX - this.renderer.BUTTON_PANEL_WIDTH - 1;\n    if (robotRightX > buttonEdge) {\n      return [buttonEdge, button];\n    } else {\n      return -1;\n    }\n  } else {\n    return -1;\n  }\n};\n\nGame.prototype.getRightButtonEdge = function (arrays) {\n  var nextColumnToLeft = this.getLeftColumn(arrays) - 1\n  if (\n    this.currentLevel.foregroundGrid[\n      this.getTopRow(arrays)][nextColumnToLeft].toString() === \"ButtonBlock\" &&\n      this.currentLevel.foregroundGrid[this.getTopRow(arrays)][nextColumnToLeft].side === \"right\"\n  ) {\n    var button = this.currentLevel.foregroundGrid[this.getTopRow(arrays)][nextColumnToLeft]\n    var robotLeftX = this.getRealLeftX(arrays);\n    var blockRealLeftX = this.getBlockRealLeftX(this.getLeftColumn(arrays));\n    var buttonEdge = blockRealLeftX + this.renderer.BUTTON_PANEL_WIDTH\n    if (robotLeftX < buttonEdge) {\n      return [buttonEdge, button];\n    } else {\n      return -1;\n    }\n  } else {\n    return -1;\n  }\n};\n\nGame.prototype.getRightDoorEdge = function (arrays, door) {\n  if (door.status !== \"open\" && door.side === \"left\") {\n    var blockRealLeftX = this.getBlockRealLeftX(this.getLeftColumn(arrays));\n    var doorEdge = blockRealLeftX + (this.BLOCK_LENGTH / 3);\n    return doorEdge;\n  } else {\n    return -1;\n  }\n};\n\nGame.prototype.getLeftDoorEdge = function (arrays, door) {\n  if (door.status !== \"open\" && door.side === \"right\") {\n    var blockRealRightX = this.getBlockRealRightX(this.getRightColumn(arrays));\n    var doorEdge = blockRealRightX - (this.BLOCK_LENGTH / 3) - 1;\n    return doorEdge;\n  } else {\n    return -1;\n  }\n};\n\nGame.prototype.passThrough = function (object, aboveObject, dir) {\n  dir = dir || \"\"\n  if ( object === \"block\" || object === \"platform\"\n      || object.toString() === \"door\" && object.status === \"closed\" && object.side != dir\n      || object.toString() === \"ButtonBlock\"\n      || object.toString() === \"ForceFieldBlock\"\n      || object.toString() === \"PowerSource\"\n      || object === \"forceField\" && aboveObject.hasPower\n  ) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nGame.prototype.handleVerticalKeys = function (leftCol, rightCol, topRow, bottomRow, key) {\n  var elevators = this.currentLevel.elevators;\n  var belowRow = bottomRow + 1;\n  if (leftCol === rightCol) {\n    var foundElevator = false;\n    var elevatorsToLaunch = [];\n    for (var el = 0; el < elevators.length; el++) {\n      if (elevators[el].col === leftCol && (elevators[el].baseRow - elevators[el].blocksHigh === bottomRow + 1)) {\n        foundElevator = true;\n        elevatorsToLaunch.push(elevators[el])\n        for (var j = 0; j < elevators.length; j++) {\n          if (j !== el && elevators[j].id === elevators[el].id) {\n            elevatorsToLaunch.push(elevators[j])\n          }\n        }\n        var elevatorResult = this.launchElevatorMaybe(elevatorsToLaunch, key);\n        elevatorResult ? \"\" : this.adjustRobotHeight(leftCol, rightCol, topRow, bottomRow, key);\n        break;\n      }\n    }\n    if (foundElevator === false) {\n      this.adjustRobotHeight(leftCol, rightCol, topRow, bottomRow, key);\n    }\n  } else {\n    var foundElevator = false;\n    for (var el = 0; el < elevators.length; el++) {\n      if (elevators[el].col === leftCol && (elevators[el].baseRow - elevators[el].blocksHigh === bottomRow + 1)) {\n        foundElevator = true;\n        for (var el2 = 0; el2 < elevators.length; el2++) {\n          var foundSecondElevator = false;\n          if (elevators[el2] !== elevators[el] && elevators[el2].id === elevators[el].id && elevators[el2].col === rightCol) {\n            foundSecondElevator = true;\n            var elevatorResult = this.launchElevatorMaybe([elevators[el], elevators[el2]], key);\n            if (elevatorResult) {\n              return;\n            } else { //elevator didn't move (top or bottom floor)\n              foundSecondElevator = false;\n            }\n          }\n        }\n        if (foundSecondElevator === false) {\n          this.adjustRobotHeight(leftCol, rightCol, topRow, bottomRow, key);\n        }\n      }\n    }\n    if (foundElevator === false) {\n      this.adjustRobotHeight(leftCol, rightCol, topRow, bottomRow, key);\n    }\n  }\n};\n\nGame.prototype.adjustRobotHeight = function (leftCol, rightCol, topRow, bottomRow, key) {\n  const SPRING_SPEED = 6;\n  var adjustedHeightIncrement = SPRING_SPEED;\n  var leftUpperBlock = this.currentLevel.foregroundGrid[topRow - 1][leftCol]\n  var rightUpperBlock = this.currentLevel.foregroundGrid[topRow - 1][rightCol]\n  if (key === 'up') {\n    if (this.robot.height < this.robot.maxHeight) {\n      //reach end of spring?\n      var ghostHeight = this.robot.height + SPRING_SPEED;\n      if (ghostHeight > this.robot.maxHeight) {\n        adjustedHeightIncrement -= (ghostHeight - this.robot.maxHeight);\n      }\n      //hit next row?\n      if (this.robot.height <= 10) {\n        var distNextRow = 10 - this.robot.height;\n      } else {\n        var distNextRow = 85 - this.robot.height;\n      }\n      var ghostDistNextRow = distNextRow - adjustedHeightIncrement;\n      if (ghostDistNextRow >= 0 || (this.passThrough(leftUpperBlock) && this.passThrough(rightUpperBlock))) {\n        this.robot.height += adjustedHeightIncrement;\n      } else {\n        this.robot.height += distNextRow;\n      }\n    }\n  } else if (key === 'down') {\n    if (this.robot.height > 0) {\n      this.robot.height -= SPRING_SPEED;\n      if (this.robot.height < 0) {\n        this.robot.height = 0;\n      }\n    }\n  }\n};\n\nGame.prototype.launchElevatorMaybe = function (elevatorArray, dir) {\n  this.elevatorArray = elevatorArray;\n  var blockHeightIndex = elevatorArray[0].heights.indexOf(elevatorArray[0].blocksHigh)\n  var destinationRow, stopAt\n  if (dir === \"up\") {\n    if (elevatorArray[0].exit === true) {\n      this.status = \"finished\";\n    } else {\n      if (this.endOfElevator(elevatorArray, dir, blockHeightIndex) === false) {\n        this.newElevatorHeight = elevatorArray[0].heights[blockHeightIndex + 1];\n        destinationRow = elevatorArray[0].baseRow - elevatorArray[0].heights[blockHeightIndex + 1]\n        stopAt = 0 + (BLOCK_LENGTH * destinationRow) - 0.5;\n        this.status = \"rising\";\n        this.stopAt = stopAt;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  } else if (dir == \"down\") {\n    if (this.endOfElevator(elevatorArray, dir, blockHeightIndex) === false) {\n      this.newElevatorHeight = elevatorArray[0].heights[blockHeightIndex - 1];\n      destinationRow = elevatorArray[0].baseRow - elevatorArray[0].heights[blockHeightIndex - 1]\n      stopAt = 0 + (BLOCK_LENGTH * destinationRow) - 0.5;\n      this.status = \"descending\";\n      this.stopAt = stopAt;\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nGame.prototype.endOfElevator = function (elevatorArray, dir, blockHeightIndex) {\n  if (dir === \"up\") {\n    return (blockHeightIndex + 1) === elevatorArray[0].heights.length\n  } else if (dir === \"down\") {\n    return blockHeightIndex === 0\n  }\n};\n\nGame.prototype.checkElevator = function () {\n  if (this.status === \"rising\") {\n    var realRobotBottom = this.getRealBottomY([this.origin, this.robot.pos])\n    if (realRobotBottom === this.stopAt) {\n      this._afterElevatorInNewSpot();\n    } else if (realRobotBottom < this.stopAt) {\n      var difference = this.stopAt - realRobotBottom\n      this.moveDown(difference, 1);\n      this.elevatorArray.forEach(function (elevator) {\n        elevator.additionalPixels -= (difference);\n      }.bind(this))\n      this._afterElevatorInNewSpot();\n    }\n  } else if (this.status === \"descending\") {\n    var realRobotBottom = this.getRealBottomY([this.origin, this.robot.pos])\n    if (realRobotBottom === this.stopAt) {\n      this._afterElevatorInNewSpot();\n    } else if (realRobotBottom > this.stopAt) {\n      var difference = realRobotBottom - this.stopAt\n      this.moveUp(difference, 1);\n      this.elevatorArray.forEach(function (elevator) {\n        elevator.additionalPixels += (difference);\n      }.bind(this))\n      this._afterElevatorInNewSpot();\n    }\n  }\n};\n\nGame.prototype._afterElevatorInNewSpot = function () {\n  this.status = \"inControl\";\n  var newElevatorHeight = this.newElevatorHeight;\n  this.elevatorArray.forEach(function (elevator) {\n    elevator.blocksHigh = newElevatorHeight;\n    elevator.topRow = elevator.baseRow - elevator.blocksHigh;\n    elevator.additionalPixels = 0;\n  })\n};\n\nGame.prototype.moveLeft = function (pixels, modifier) {\n  var returnOrigin = this.origin;\n  var returnPos = this.robot.pos;\n  if (this.origin[0] < 0) {\n    returnOrigin[0] = 0;\n  } else if (this.robot.pos[0] === 263.5 && this.origin[0] > 0) {\n    returnOrigin[0] -= pixels * modifier;\n  } else if (this.robot.pos[0] < 263.5 && this.origin[0] > 0) {\n    returnPos[0] = 263.5;\n    returnOrigin[0] -= pixels * modifier;\n  } else {\n    returnPos[0] -= pixels * modifier;\n  }\n  return [returnOrigin, returnPos];\n};\n\nGame.prototype.moveRight = function (pixels, modifier) {\n  var returnOrigin = this.origin;\n  var returnPos = this.robot.pos;\n  if (this.levelWidth - this.origin[0] < this.BLOCK_LENGTH * 8) {\n    returnOrigin[0] = this.levelWidth - (this.BLOCK_LENGTH * 8);\n  } else if (this.robot.pos[0] === 263.5 && (this.levelWidth - this.origin[0]) > (this.BLOCK_LENGTH * 8)) {\n    returnOrigin[0] += pixels * modifier;\n  } else if (this.robot.pos[0] > 263.5 && (this.levelWidth - this.origin[0]) > (this.BLOCK_LENGTH * 8)) {\n    returnPos[0] = 263.5;\n    returnOrigin[0] += pixels * modifier;\n  } else {\n    returnPos[0] += pixels * modifier;\n  }\n  return [returnOrigin, returnPos];\n};\n\nGame.prototype.moveUp = function (pixels, modifier) {\n  var returnOrigin = this.origin;\n  var returnPos = this.robot.pos;\n  var difference;\n  if (this.robot.pos[1] === 187.5 && this.origin[1] > 0) {\n    returnOrigin[1] -= pixels * modifier;\n  } else if (this.robot.pos[1] < 187.5 && this.origin[1] > 0) {\n    difference = 187.5 - this.robot.pos[1];\n    returnOrigin[1] -= pixels * modifier;\n    returnPos[1] = 187.5;\n    returnOrigin[1] -= difference;\n  } else {\n    returnPos[1] -= pixels * modifier;\n  }\n  if (returnOrigin[1] < 0) { //has the view passed the top of the level?\n    var difference = 0 - returnOrigin[1] //by how much?\n    returnOrigin[1] = 0; //set the view back to 0\n    returnPos[1] -= difference; //push the robot down by the same amount\n  }\n  return [returnOrigin, returnPos];\n};\n\nGame.prototype.moveDown = function (pixels, modifier) {\n  var returnOrigin = this.origin;\n  var returnPos = this.robot.pos;\n  var difference;\n  if (this.robot.pos[1] === 187.5 && (this.levelHeight - this.origin[1]) > (this.BLOCK_LENGTH * 6)) {\n    returnOrigin[1] += pixels * modifier;\n  } else if (this.robot.pos[1] > 187.5 && (this.levelHeight - this.origin[1]) > (this.BLOCK_LENGTH * 6)) {\n    difference = this.robot.pos[1] - 187.5;\n    returnOrigin[1] += pixels * modifier;\n    returnPos[1] = 187.5;\n    returnOrigin[1] += difference;\n  } else {\n    returnPos[1] += pixels * modifier;\n  }\n  var topOfScreenToLevelBottom = this.levelHeight - returnOrigin[1];\n  if (topOfScreenToLevelBottom < this.BLOCK_LENGTH * 6) {\n    difference = (this.BLOCK_LENGTH * 6) - topOfScreenToLevelBottom;\n    returnOrigin[1] = this.levelHeight - (this.BLOCK_LENGTH * 6);\n    returnPos[1] += difference;\n  }\n  return [returnOrigin, returnPos];\n};\n\nGame.prototype.setGhostToReal = function (ghostArrays, ghostHeight) {\n  this.origin = ghostArrays[0];\n  this.robot.pos = ghostArrays[1];\n  if (ghostHeight) {\n    this.robot.height = ghostHeight;\n  }\n}\n\nGame.prototype.getLeftColumn = function (arrays) {\n  var xInLevel = this.getRealLeftX(arrays);\n  var column = Math.floor(xInLevel / this.BLOCK_LENGTH);\n  return column;\n}\n\nGame.prototype.getRightColumn = function (arrays) {\n  var xInLevel = this.getRealRightX(arrays);\n  var column = Math.floor(xInLevel / this.BLOCK_LENGTH);\n  return column;\n}\n\nGame.prototype.getTopRow = function (arrays) {\n  var yInLevel = this.getRealTopY(arrays);\n  var row = Math.floor(yInLevel / this.BLOCK_LENGTH);\n  return row;\n}\n\nGame.prototype.getBottomRow = function (arrays) {\n  var yInLevel = this.getRealBottomY(arrays);\n  var row = Math.floor(yInLevel / this.BLOCK_LENGTH);\n  return row;\n}\n\nGame.prototype.getRealLeftX = function (arrays) {\n  return arrays[0][0] + arrays[1][0];\n}\n\nGame.prototype.getRealRightX = function (arrays) {\n  return arrays[0][0] + (arrays[1][0] + this.BLOCK_LENGTH - 1);\n}\n\nGame.prototype.getRealTopY = function (arrays) {\n  return arrays[0][1] + arrays[1][1] - this.robot.height + 10;\n}\n\nGame.prototype.getRealBottomY = function (arrays) {\n  return arrays[0][1] + (arrays[1][1] + this.BLOCK_LENGTH - 1);\n}\n\nGame.prototype.getBlockRealRightX = function (column) {\n  return (0.5 + (column + 1) * this.BLOCK_LENGTH);\n};\n\nGame.prototype.getBlockRealLeftX = function (column) {\n  return (0.5 + (column) * this.BLOCK_LENGTH);\n};\n\nGame.prototype.getBlockRealBottomY = function (row) {\n  return (0.5 + (row + 1) * this.BLOCK_LENGTH);\n};\n\nmodule.exports = Game;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game.js\n ** module id = 11\n ** module chunks = 0\n **/","var obj = require('./../level_builder.js');\nvar Level = obj.Level;\nvar LevelBuilder = obj.LevelBuilder;\nvar Door = obj.Door;\nvar Elevator = obj.Elevator;\nvar ExitElevator = obj.ExitElevator;\nvar ButtonBlock = obj.ButtonBlock;\nvar Cubby = obj.Cubby;\nvar Wire = obj.Wire;\nvar WireJunction = obj.WireJunction;\nvar PowerSource = obj.PowerSource;\nvar ForceFieldBlock = obj.ForceFieldBlock;\nvar Panel = obj.Panel;\nvar Spring = obj.Spring;\nvar Message = obj.Message;\n\nvar builder = new LevelBuilder();\n\nvar doors = [\n  new Door(101, \"left\"),\n  new Door(102, \"left\")\n];\n\nvar messages = [\n  new Message(0, 7, 0, 5, \"top\", \"Use the arrow keys to move left and right.\"),\n  new Message(9, 18, 3, 5, \"top\", \"You can also use the up and down\", \"arrow keys to ride elevators.\"),\n  new Message(9, 18, 0, 2, \"bottom\", \"You can also use the up and down\", \"arrow keys to ride elevators.\"),\n  new Message(23, 30, 2, 5, \"top\", \"Push buttons to open doors.\"),\n  new Message(35, 39, 2, 5, \"top\", \"Press spacebar while in front of a socket\", \"to insert or remove a panel.\"),\n  new Message(41, 43, 2, 5, \"top\", \"Place the correct panel in this socket\", \"to send power to the button.\"),\n  new Message(48, 54, 2, 5, \"top\", \"Disrupt power to force fields\", \"to pass through them.\"),\n  new Message(58, 61, 2, 5, \"top\", \"The spring power-up allows you to extend\", \"the height of your robot.\"),\n  new Message(61, 69, 2, 5, \"top\", \"Now you can use the up and down\", \"arrow keys to adjust your height.\"),\n  new Message(70, 76, 3, 4, \"top\", \"Your goal is to find the red elevators.\", \"You can ride them up to the next level.\")\n]\n\nvar elevators = [\n  new Elevator({\n    id: 101,\n    baseRowCol: [5, 11],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 101,\n    baseRowCol: [5, 12],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 102,\n    baseRowCol: [5, 17],\n    startingHeight: 3,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 102,\n    baseRowCol: [5, 18],\n    startingHeight: 3,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [5, 24],\n    startingHeight: 0,\n    heights: [0, 2]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [5, 25],\n    startingHeight: 0,\n    heights: [0, 2]\n  }),\n  new Elevator({\n    id: 104,\n    baseRowCol: [5, 45],\n    startingHeight: 0,\n    heights: [0, 2]\n  }),\n  new Elevator({\n    id: 104,\n    baseRowCol: [5, 46],\n    startingHeight: 0,\n    heights: [0, 2]\n  }),\n  new ExitElevator({\n    id: 105,\n    baseRowCol: [5, 75],\n    startingHeight: 0,\n    heights: [0, 10]\n  }),\n  new ExitElevator({\n    id: 105,\n    baseRowCol: [5, 76],\n    startingHeight: 0,\n    heights: [0, 10]\n  })\n];\n\nvar cubbies = [\n  new Cubby({\n    id: \"C101\",\n    rowCol: [4, 36],\n    startItem: new Panel([\"E\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C101\",\n    rowCol: [4, 37],\n    startItem: new Panel([\"N\", \"S\"])\n  }),\n  new Cubby({\n    id: \"C101\",\n    rowCol: [4, 38],\n    startItem: new Panel([\"S\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C101\",\n    rowCol: [4, 42],\n    startItem: null\n  }),\n  new Cubby({\n    id: \"C101\",\n    rowCol: [4, 52],\n    startItem: new Panel([\"N\", \"S\"])\n  }),\n  new Cubby({\n    id: \"C101\",\n    rowCol: [3, 68],\n    startItem: new Panel([\"N\", \"E\"])\n  })\n];\n\nvar powerSources = [\n  new PowerSource({\n    id: \"PS101\",\n    rowCol: [0, 29]\n  }),\n  new PowerSource({\n    id: \"PS102\",\n    rowCol: [5, 42]\n  }),\n  new PowerSource({\n    id: \"PS103\",\n    rowCol: [5, 52]\n  }),\n  new PowerSource({\n    id: \"PS104\",\n    rowCol: [0, 68]\n  })\n]\n\nvar wiring = [\n  new Wire({ rowCol: [2, 29], type: \"NW\" }),\n  new Wire({ rowCol: [1, 29], type: \"NS\" }),\n\n  new WireJunction({ rowCol: [4, 42], segmentStrings: [\"N\", \"S\"] }),\n  new Wire({ rowCol: [3, 42], type: \"NS\" }),\n  new Wire({ rowCol: [2, 42], type: \"ES\" }),\n\n  new WireJunction({ rowCol: [4, 52], segmentStrings: [\"N\", \"S\"] }),\n  new Wire({ rowCol: [3, 52], type: \"ES\" }),\n  new Wire({ rowCol: [3, 53], type: \"EW\" }),\n\n  new Wire({ rowCol: [1, 68], type: \"NS\" }),\n  new Wire({ rowCol: [2, 68], type: \"NS\" }),\n  new WireJunction({ rowCol: [3, 68], segmentStrings: [\"N\", \"E\"] })\n]\n\nvar buttonBlocks = [\n  new ButtonBlock({\n    id: \"BB101\",\n    side: \"left\",\n    rowCol: [2, 28],\n    func: function () {\n      doors[0].open();\n    }\n  }),\n  new ButtonBlock({\n    id: \"BB102\",\n    side: \"right\",\n    rowCol: [2, 43],\n    func: function () {\n      doors[1].open();\n    }\n  })\n];\n\nvar forceFieldBlocks = [\n  new ForceFieldBlock({\n    id: \"FF101\",\n    rowCol: [2, 53]\n  }),\n  new ForceFieldBlock({\n    id: \"FF101\",\n    rowCol: [3, 69]\n  })\n];\n\nvar foregroundGrid = [\n  builder.rowOf(29, \"block\").concat([powerSources[0]]).concat(builder.rowOf(38, \"block\")).concat([powerSources[3]]).concat(builder.rowOf(6, \"block\")).concat([\"\", \"\", \"block\"]),\n  [\"block\"].concat(builder.rowOf(9, \"\")).concat([\"block\"]).concat(builder.rowOf(8, \"\")).concat([\"block\"]).concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(6, \"\")).concat([\"block\"]).concat(builder.rowOf(10, \"\")).concat([\"block\"]).concat(builder.rowOf(5, \"\")).concat([\"block\"]).concat(builder.rowOf(29, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(12, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(6, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat([buttonBlocks[0]]).concat([\"\", \"block\"]).concat(builder.rowOf(10, \"\")).concat([\"block\"]).concat([\"\", buttonBlocks[1]]).concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(29, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(12, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(9, \"\")).concat(builder.rowOf(5, \"block\")).concat(builder.rowOf(10, \"\")).concat([\"block\", \"\"]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(6, \"\")).concat([forceFieldBlocks[0]]).concat(builder.rowOf(14, \"\")).concat([forceFieldBlocks[1]]).concat(builder.rowOf(7, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(12, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(13, \"\")).concat(doors[0]).concat(builder.rowOf(16, \"\")).concat(doors[1]).concat(builder.rowOf(6, \"\")).concat([\"forceField\"]).concat(builder.rowOf(7, \"\")).concat([new Spring()]).concat(builder.rowOf(6, \"\")).concat([\"forceField\"]).concat(builder.rowOf(7, \"\")).concat([\"block\"]),\n  builder.rowOf(11, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(16, \"block\")).concat([powerSources[1]]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\")).concat([powerSources[2]]).concat(builder.rowOf(22, \"block\")).concat([\"\", \"\", \"block\"])\n];\n\nvar backgroundGrid = [\n  builder.rowOf(78, \"brick\"),\n  builder.rowOf(78, \"brick\"),\n  builder.rowOf(78, \"brick\"),\n  builder.rowOf(78, \"brick\"),\n  builder.rowOf(78, \"brick\"),\n  builder.rowOf(78, \"brick\")\n];\n\nlevel = new Level({\n  color: '#632612',\n  foregroundGrid: foregroundGrid,\n  backgroundGrid: backgroundGrid,\n  startingPos: [225.5, 300.5],\n  elevators: elevators,\n  doors: doors,\n  cubbies: cubbies,\n  wiring: wiring,\n  powerSources: powerSources,\n  forceFieldBlocks: forceFieldBlocks,\n  buttonBlocks: buttonBlocks,\n  messages: messages\n});\n\nmodule.exports = level;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/levels/tutorial.js\n ** module id = 12\n ** module chunks = 0\n **/","var Door = require('./door.js');\nvar Elevator = require('./elevator.js');\nvar ExitElevator = require('./exitElevator.js');\nvar ButtonBlock = require('./buttonBlock.js');\nvar Cubby = require('./cubby.js');\nvar Wire = require('./wire.js');\nvar WireJunction = require('./wireJunction.js');\nvar PowerSource = require('./powerSource.js');\nvar ForceFieldBlock = require('./forceFieldBlock.js');\nvar Panel = require('./panel.js');\nvar Spring = require('./spring.js');\nvar Message = require('./message.js');\n\nfunction Level(options) {\n  this.name = options.name;\n  this.color = options.color;\n  this.foregroundGrid = options.foregroundGrid;\n  this.backgroundGrid = options.backgroundGrid;\n  this.startingPos = options.startingPos;\n  this.elevators = options.elevators;\n  this.doors = options.doors;\n  this.cubbies = options.cubbies;\n  this.wiring = options.wiring;\n  this.powerSources = options.powerSources;\n  this.forceFieldBlocks = options.forceFieldBlocks;\n  this.buttonBlocks = options.buttonBlocks;\n  this.messages = options.messages;\n}\n\nfunction LevelBuilder() {};\n\nLevelBuilder.prototype.rowOf = function (rowLength, something) {\n  var rowArray = [];\n  for (var i = 0; i < rowLength; i++) {\n    rowArray.push(something);\n  }\n  return rowArray;\n};\n\nmodule.exports = {\n  Level: Level,\n  LevelBuilder: LevelBuilder,\n  Door: Door,\n  Elevator: Elevator,\n  ExitElevator: ExitElevator,\n  ButtonBlock: ButtonBlock,\n  Cubby: Cubby,\n  Wire: Wire,\n  WireJunction: WireJunction,\n  PowerSource: PowerSource,\n  ForceFieldBlock: ForceFieldBlock,\n  Panel: Panel,\n  Spring: Spring,\n  Message: Message\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/level_builder.js\n ** module id = 13\n ** module chunks = 0\n **/","function Elevator(options) {\n  this.id = options.id;\n  this.col = options.baseRowCol[1];\n  this.baseRow = options.baseRowCol[0];\n  this.blocksHigh = options.startingHeight || 0;\n  this.speed = options.speed || 400;\n  this.heights = options.heights;\n\n  this.topRow = this.baseRow - this.blocksHigh;\n  this.additionalPixels = 0;\n  this.toString = function () { return \"elevator\" };\n}\n\nmodule.exports = Elevator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/elevator.js\n ** module id = 14\n ** module chunks = 0\n **/","var Elevator = require('./elevator.js');\n\nfunction ExitElevator(options) {\n  this.id = options.id;\n  this.col = options.baseRowCol[1];\n  this.baseRow = options.baseRowCol[0];\n  this.blocksHigh = options.startingHeight || 0;\n  this.speed = options.speed || 400;\n  this.heights = options.heights;\n\n  this.topRow = this.baseRow - this.blocksHigh;\n  this.additionalPixels = 0;\n  this.exit = true;\n}\n\nvar Surrogate = function () {};\nSurrogate.prototype = Elevator.prototype;\nExitElevator.prototype = new Surrogate();\nExitElevator.prototype.constructor = ExitElevator;\n\nmodule.exports = ExitElevator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/exitElevator.js\n ** module id = 15\n ** module chunks = 0\n **/","var PowerObject = require('./powerObject');\n\nfunction PowerSource(options) {\n  this.initializePowerObject(options);\n}\n\nvar Surrogate = function () {};\nSurrogate.prototype = PowerObject.prototype;\nPowerSource.prototype = new Surrogate();\nPowerSource.prototype.constructor = PowerSource;\n\nmodule.exports = PowerSource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/powerSource.js\n ** module id = 16\n ** module chunks = 0\n **/","var PowerObject = require('./powerObject');\n\nfunction ForceFieldBlock(options) {\n  this.initializePowerObject(options);\n}\n\nvar Surrogate = function () {};\nSurrogate.prototype = PowerObject.prototype;\nForceFieldBlock.prototype = new Surrogate();\nForceFieldBlock.prototype.constructor = ForceFieldBlock;\n\nmodule.exports = ForceFieldBlock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/forceFieldBlock.js\n ** module id = 17\n ** module chunks = 0\n **/","\nfunction Spring(options) {\n  this.pickedUp = false;\n  this.toString = function () { return \"spring\" };\n}\n\nmodule.exports = Spring;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/spring.js\n ** module id = 18\n ** module chunks = 0\n **/","function Message(left, right, top, bottom, pos, text, text2) {\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.pos = pos;\n  this.text = text;\n  this.text2 = text2;\n};\n\nmodule.exports = Message;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/message.js\n ** module id = 19\n ** module chunks = 0\n **/","var obj = require('./../level_builder.js');\nvar Level = obj.Level;\nvar LevelBuilder = obj.LevelBuilder;\nvar Door = obj.Door;\nvar Elevator = obj.Elevator;\nvar ExitElevator = obj.ExitElevator;\nvar ButtonBlock = obj.ButtonBlock;\nvar Cubby = obj.Cubby;\nvar Wire = obj.Wire;\nvar WireJunction = obj.WireJunction;\nvar PowerSource = obj.PowerSource;\nvar ForceFieldBlock = obj.ForceFieldBlock;\nvar Panel = obj.Panel;\nvar Spring = obj.Spring;\n\nvar builder = new LevelBuilder();\n\nvar doors = [\n  new Door(101, \"right\"),\n  new Door(102, \"left\")\n];\n\nvar elevators = [\n  new Elevator({\n    id: 101,\n    baseRowCol: [10, 5],\n    startingHeight: 4,\n    heights: [0, 4, 8]\n  }),\n  new Elevator({\n    id: 101,\n    baseRowCol: [10, 6],\n    startingHeight: 4,\n    heights: [0, 4, 8]\n  }),\n  new Elevator({\n    id: 102,\n    baseRowCol: [10, 1],\n    startingHeight: 0,\n    heights: [0, 6]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [12, 17],\n    startingHeight: 6,\n    heights: [0, 3, 6, 10]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [12, 18],\n    startingHeight: 6,\n    heights: [0, 3, 6, 10]\n  }),\n  new ExitElevator({\n    id: 104,\n    baseRowCol: [2, 21],\n    startingHeight: 0,\n    heights: [0, 3, 6, 10]\n  }),\n  new ExitElevator({\n    id: 104,\n    baseRowCol: [2, 22],\n    startingHeight: 0,\n    heights: [0]\n  })\n];\n\nvar cubbies = [\n  new Cubby({\n    id: \"C101\",\n    rowCol: [1, 2],\n    startItem: new Panel([\"N\", \"S\"])\n  }),\n  new Cubby({\n    id: \"C102\",\n    rowCol: [11, 15],\n    startItem: new Panel([\"E\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C103\",\n    rowCol: [4, 13],\n    startItem: null\n  }),\n  new Cubby({\n    id: \"C104\",\n    rowCol: [8, 21],\n    startItem: new Panel([\"S\", \"W\"])\n  })\n];\n\nvar powerSources = [\n  new PowerSource({\n    id: \"PS101\",\n    rowCol: [11, 22]\n  })\n]\n\nvar wiring = [\n  //Force Field Block\n  new Wire({ rowCol: [11, 21], type: \"EW\" }),\n  new Wire({ rowCol: [11, 20], type: \"EW\" }),\n  new Wire({ rowCol: [11, 19], type: \"EW\" }),\n  new Wire({ rowCol: [11, 18], type: \"EW\" }),\n  new Wire({ rowCol: [11, 17], type: \"EW\" }),\n  new Wire({ rowCol: [11, 16], type: \"EW\" }),\n  new WireJunction({ rowCol: [11, 15], segmentStrings: [\"E\", \"W\"] }),\n  new Wire({ rowCol: [11, 14], type: \"NE\" }),\n  new Wire({ rowCol: [10, 14], type: \"NS\" }),\n  new Wire({ rowCol: [9, 14], type: \"NS\" }),\n  new Wire({ rowCol: [8, 14], type: \"NS\" }),\n  new Wire({ rowCol: [7, 14], type: \"NS\" }),\n  new Wire({ rowCol: [6, 14], type: \"NS\" }),\n  new Wire({ rowCol: [5, 14], type: \"NSW\" }),\n  new Wire({ rowCol: [4, 14], type: \"ES\" }),\n  new Wire({ rowCol: [4, 15], type: \"EW\" }),\n  new Wire({ rowCol: [4, 16], type: \"EW\" }),\n  new Wire({ rowCol: [4, 17], type: \"EW\" }),\n  new Wire({ rowCol: [4, 18], type: \"EW\" }),\n\n  //Branch to top button\n  new Wire({ rowCol: [1, 13], type: \"ES\" }),\n  new Wire({ rowCol: [2, 13], type: \"NS\" }),\n  new Wire({ rowCol: [3, 13], type: \"NS\" }),\n  new WireJunction({ rowCol: [4, 13], segmentStrings: [\"N\", \"S\", \"W\"] }),\n  new Wire({ rowCol: [5, 13], type: \"NE\" }),\n\n  //Branch to left button\n  new Wire({ rowCol: [3, 5], type: \"EW\" }),\n  new Wire({ rowCol: [3, 6], type: \"EW\" }),\n  new Wire({ rowCol: [3, 7], type: \"WS\" }),\n  new Wire({ rowCol: [4, 7], type: \"NE\" }),\n  new Wire({ rowCol: [4, 8], type: \"EW\" }),\n  new Wire({ rowCol: [4, 9], type: \"EW\" }),\n  new Wire({ rowCol: [4, 10], type: \"EW\" }),\n  new Wire({ rowCol: [4, 11], type: \"EW\" }),\n  new Wire({ rowCol: [4, 12], type: \"EW\" }),\n]\n\nvar buttonBlocks = [\n  new ButtonBlock({\n    id: \"BB101\",\n    side: \"left\",\n    rowCol: [3, 4],\n    func: function () {\n      doors[0].open();\n    }\n  }),\n  new ButtonBlock({\n    id: \"BB102\",\n    side: \"right\",\n    rowCol: [1, 14],\n    func: function () {\n      doors[1].open();\n    }\n  })\n];\n\nvar forceFieldBlocks = [\n  new ForceFieldBlock({\n    id: \"FF101\",\n    rowCol: [4, 19]\n  })\n];\n\nvar foregroundGrid = [\n  builder.rowOf(21, \"block\").concat(builder.rowOf(2, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(2, \"\")).concat(doors[0]).concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(6, \"\")).concat([buttonBlocks[1]]).concat(builder.rowOf(4, \"\")).concat(doors[1]).concat(builder.rowOf(3, \"\")).concat([\"block\"]),\n  builder.rowOf(5, \"block\").concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(6, \"\")).concat(builder.rowOf(3, \"platform\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(3, \"\")).concat([buttonBlocks[0]]).concat(builder.rowOf(12, \"\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\")),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(3, \"block\")).concat(builder.rowOf(14, \"\")).concat([forceFieldBlocks[0]]).concat(builder.rowOf(3, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(14, \"\")).concat(builder.rowOf(1, \"forceField\")).concat(builder.rowOf(1, \"\")).concat(new Spring()).concat([\"\"]).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(7, \"block\")).concat([\"platform\"]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\")),\n  [\"block\"].concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(5, \"block\")).concat([\"\"]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(6, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(5, \"block\")).concat([\"\"]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(6, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(4, \"\")).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(5, \"block\")).concat([\"\"]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\")),\n  [\"block\", \"\"].concat(builder.rowOf(3, \"block\")).concat(builder.rowOf(2, elevators[0])).concat(builder.rowOf(7, \"block\")).concat([\"\"]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(5, \"\")).concat(builder.rowOf(2, \"powerBlock\")),\n  builder.rowOf(14, \"block\").concat(builder.rowOf(8, \"\")).concat([powerSources[0]]).concat([\"powerBlock\"]),\n  builder.rowOf(17, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\"))\n];\n\nvar backgroundGrid = [\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\"),\n  builder.rowOf(24, \"brick\")\n];\n\nlevel = new Level({\n  name: \"Level 1\",\n  color: '#632612',\n  foregroundGrid: foregroundGrid,\n  backgroundGrid: backgroundGrid,\n  startingPos: [750.5, 375.5],\n  elevators: elevators,\n  doors: doors,\n  cubbies: cubbies,\n  wiring: wiring,\n  powerSources: powerSources,\n  forceFieldBlocks: forceFieldBlocks,\n  buttonBlocks: buttonBlocks\n});\n\nmodule.exports = level;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/levels/level1.js\n ** module id = 20\n ** module chunks = 0\n **/","var obj = require('./../level_builder.js');\nvar Level = obj.Level;\nvar LevelBuilder = obj.LevelBuilder;\nvar Door = obj.Door;\nvar Elevator = obj.Elevator;\nvar ExitElevator = obj.ExitElevator;\nvar ButtonBlock = obj.ButtonBlock;\nvar Cubby = obj.Cubby;\nvar Wire = obj.Wire;\nvar WireJunction = obj.WireJunction;\nvar PowerSource = obj.PowerSource;\nvar ForceFieldBlock = obj.ForceFieldBlock;\nvar Panel = obj.Panel;\nvar Spring = obj.Spring;\n\nvar builder = new LevelBuilder();\n\nvar doors = [];\n\nvar elevators = [\n  new Elevator({\n    id: 101,\n    baseRowCol: [13, 13],\n    startingHeight: 0,\n    heights: [0, 4, 8]\n  }),\n  new Elevator({\n    id: 101,\n    baseRowCol: [13, 14],\n    startingHeight: 0,\n    heights: [0, 4, 8]\n  }),\n  new Elevator({\n    id: 102,\n    baseRowCol: [13, 7],\n    startingHeight: 0,\n    heights: [0, 2]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [17, 1],\n    startingHeight: 12,\n    heights: [0, 6, 12]\n  }),\n  new ExitElevator({\n    id: 104,\n    baseRowCol: [9, 17],\n    startingHeight: 0,\n    heights: [0]\n  }),\n  new ExitElevator({\n    id: 104,\n    baseRowCol: [9, 18],\n    startingHeight: 0,\n    heights: [0]\n  })\n];\n\nvar cubbies = [\n  new Cubby({\n    id: \"C101\",\n    rowCol: [3, 12],\n    startItem: new Panel([\"E\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C102\",\n    rowCol: [7, 12],\n    startItem: new Panel([\"E\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C103\",\n    rowCol: [16, 3],\n    startItem: null\n  })\n];\n\nvar powerSources = [\n  new PowerSource({\n    id: \"PS101\",\n    rowCol: [11, 22]\n  }),\n  new PowerSource({\n    id: \"PS102\",\n    rowCol: [7, 9]\n  }),\n  new PowerSource({\n    id: \"PS103\",\n    rowCol: [8, 8]\n  })\n]\n\nvar wiring = [\n  new Wire({ rowCol: [7, 10], type: \"EW\" }),\n  new Wire({ rowCol: [7, 11], type: \"EW\" }),\n  new WireJunction({ rowCol: [7, 12], segmentStrings: [\"E\", \"W\"] }),\n  new Wire({ rowCol: [7, 13], type: \"EW\" }),\n  new Wire({ rowCol: [7, 14], type: \"EW\" }),\n\n  new Wire({ rowCol: [6, 9], type: \"NS\" }),\n  new Wire({ rowCol: [5, 9], type: \"NS\" }),\n  new Wire({ rowCol: [4, 9], type: \"NS\" }),\n  new Wire({ rowCol: [3, 9], type: \"ES\" }),\n  new Wire({ rowCol: [3, 10], type: \"EW\" }),\n  new Wire({ rowCol: [3, 11], type: \"EW\" }),\n  new WireJunction({ rowCol: [3, 12], segmentStrings: [\"E\", \"W\"] }),\n  new Wire({ rowCol: [3, 13], type: \"EW\" }),\n  new Wire({ rowCol: [3, 14], type: \"EW\" }),\n  new Wire({ rowCol: [3, 15], type: \"EW\" }),\n  new Wire({ rowCol: [3, 16], type: \"WS\" }),\n  new Wire({ rowCol: [4, 16], type: \"NS\" }),\n  new Wire({ rowCol: [5, 16], type: \"NS\" }),\n  new Wire({ rowCol: [6, 16], type: \"NS\" }),\n\n  new Wire({ rowCol: [8, 7], type: \"EW\" }),\n  new Wire({ rowCol: [8, 6], type: \"EW\" }),\n  new Wire({ rowCol: [8, 5], type: \"EW\" }),\n  new Wire({ rowCol: [8, 4], type: \"ES\" })\n]\n\nvar buttonBlocks = [];\n\nvar forceFieldBlocks = [\n  new ForceFieldBlock({\n    id: \"FF101\",\n    rowCol: [7, 15]\n  }),\n  new ForceFieldBlock({\n    id: \"FF102\",\n    rowCol: [7, 16]\n  }),\n  new ForceFieldBlock({\n    id: \"FF103\",\n    rowCol: [9, 4]\n  })\n];\n\nvar foregroundGrid = [\n  builder.rowOf(17, \"block\").concat(builder.rowOf(2, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(18, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(18, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(18, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(14, \"\")).concat([\"block\"]).concat(builder.rowOf(3, \"\")).concat([\"block\"]),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(11, \"platform\")).concat(builder.rowOf(2, \"\")).concat([\"platform\"]).concat(builder.rowOf(3, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(18, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(7, \"\")).concat([\"powerBlock\"]).concat([powerSources[0]]).concat(builder.rowOf(5, \"\")).concat([forceFieldBlocks[0]]).concat([forceFieldBlocks[1]]).concat(builder.rowOf(2, \"\")).concat([\"block\"]),\n  [\"block\"].concat(builder.rowOf(7, \"\")).concat([powerSources[2]]).concat([powerSources[1]]).concat(builder.rowOf(5, \"\")).concat(builder.rowOf(2, \"forceField\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(2, \"\")).concat([forceFieldBlocks[2]]).concat(builder.rowOf(3, \"block\")).concat([\"block\"]).concat(builder.rowOf(4, \"platform\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(1, \"block\")),\n  [\"block\"].concat(builder.rowOf(2, \"\")).concat(new Spring()).concat([\"forceField\"]).concat(builder.rowOf(3, \"\")).concat([\"block\"]).concat(builder.rowOf(7, \"\")).concat(builder.rowOf(4, \"block\")),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(5, \"block\")).concat(builder.rowOf(12, \"\")).concat([\"block\"]),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(5, \"block\")).concat(builder.rowOf(12, \"\")).concat([\"block\"]),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(5, \"block\")).concat([\"\"]).concat(builder.rowOf(5, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(5, \"block\")),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(18, \"block\")),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(18, \"block\")),\n  [\"block\"].concat(builder.rowOf(4, \"\")).concat(builder.rowOf(15, \"block\")),\n  [\"block\"].concat([\"\"]).concat(builder.rowOf(18, \"block\"))\n];\n\nvar backgroundGrid = [\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\"),\n  builder.rowOf(20, \"brick\")\n];\n\nlevel = new Level({\n  name: \"Level 2\",\n  color: '#4A7A36',\n  foregroundGrid: foregroundGrid,\n  backgroundGrid: backgroundGrid,\n  startingPos: [675.5, 900.5],\n  elevators: elevators,\n  doors: doors,\n  cubbies: cubbies,\n  wiring: wiring,\n  powerSources: powerSources,\n  forceFieldBlocks: forceFieldBlocks,\n  buttonBlocks: buttonBlocks\n});\n\nmodule.exports = level;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/levels/level2.js\n ** module id = 21\n ** module chunks = 0\n **/","var obj = require('./../level_builder.js');\nvar Level = obj.Level;\nvar LevelBuilder = obj.LevelBuilder;\nvar Door = obj.Door;\nvar Elevator = obj.Elevator;\nvar ExitElevator = obj.ExitElevator;\nvar ButtonBlock = obj.ButtonBlock;\nvar Cubby = obj.Cubby;\nvar Wire = obj.Wire;\nvar WireJunction = obj.WireJunction;\nvar PowerSource = obj.PowerSource;\nvar ForceFieldBlock = obj.ForceFieldBlock;\nvar Panel = obj.Panel;\nvar Spring = obj.Spring;\n\nvar builder = new LevelBuilder();\n\nvar doors = [\n  new Door(101, \"right\", 'green'),\n  new Door(102, \"right\"),\n  new Door(103, \"right\"),\n  new Door(104, \"right\"),\n  new Door(105, \"right\", 'green'),\n  new Door(106, \"left\"),\n  new Door(107, \"left\", 'green'),\n  new Door(108, \"right\", 'green'),\n  new Door(109, \"left\", 'green'),\n  new Door(110, \"left\")\n];\n\nvar elevators = [\n  new Elevator({\n    id: 102,\n    baseRowCol: [9, 9],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 102,\n    baseRowCol: [9, 10],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [6, 6],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 103,\n    baseRowCol: [6, 7],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 104,\n    baseRowCol: [15, 6],\n    startingHeight: 0,\n    heights: [0, 3, 6]\n  }),\n  new Elevator({\n    id: 104,\n    baseRowCol: [15, 7],\n    startingHeight: 0,\n    heights: [0, 3, 6]\n  }),\n  new Elevator({\n    id: 105,\n    baseRowCol: [9, 1],\n    startingHeight: 3,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 106,\n    baseRowCol: [18, 11],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 106,\n    baseRowCol: [18, 12],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 107,\n    baseRowCol: [18, 19],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 107,\n    baseRowCol: [18, 20],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 108,\n    baseRowCol: [15, 24],\n    startingHeight: 0,\n    heights: [0, 3, 6]\n  }),\n  new Elevator({\n    id: 108,\n    baseRowCol: [15, 25],\n    startingHeight: 0,\n    heights: [0, 3, 6]\n  }),\n  new Elevator({\n    id: 109,\n    baseRowCol: [9, 21],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 109,\n    baseRowCol: [9, 22],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 110,\n    baseRowCol: [6, 24],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 110,\n    baseRowCol: [6, 25],\n    startingHeight: 0,\n    heights: [0, 3]\n  }),\n  new Elevator({\n    id: 111,\n    baseRowCol: [9, 30],\n    startingHeight: 3,\n    heights: [0, 3]\n  }),\n  new ExitElevator({\n    id: 101,\n    baseRowCol: [3, 15],\n    startingHeight: 0,\n    heights: [0, 3, 6, 10]\n  }),\n  new ExitElevator({\n    id: 101,\n    baseRowCol: [3, 16],\n    startingHeight: 0,\n    heights: [0]\n  })\n];\n\nvar cubbies = [\n  new Cubby({\n    id: \"C101\",\n    rowCol: [8, 3],\n    startItem: new Panel([\"E\", \"S\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C102\",\n    rowCol: [4, 28],\n    startItem: new Panel([\"E\", \"N\", \"W\"])\n  }),\n  new Cubby({\n    id: \"C103\",\n    rowCol: [14, 3],\n    startItem: new Panel([\"N\", \"E\"])\n  }),\n  new Cubby({\n    id: \"C104\",\n    rowCol: [14, 28],\n    startItem: new Panel([\"N\", \"S\"])\n  })\n];\n\nvar powerSources = [\n  new PowerSource({\n    id: \"PS101\",\n    rowCol: [15, 16]\n  }),\n  new PowerSource({\n    id: \"PS102\",\n    rowCol: [15, 15]\n  })\n]\n\nvar wiring = [\n  new Wire({ rowCol: [16, 16], type: \"NE\" }),\n  new Wire({ rowCol: [16, 17], type: \"EW\" }),\n  new Wire({ rowCol: [16, 18], type: \"EW\" }),\n  new Wire({ rowCol: [16, 19], type: \"EW\" }),\n  new Wire({ rowCol: [16, 20], type: \"EW\" }),\n  new Wire({ rowCol: [16, 21], type: \"EW\" }),\n  new Wire({ rowCol: [16, 22], type: \"WS\" }),\n  new Wire({ rowCol: [17, 22], type: \"NE\" }),\n  new Wire({ rowCol: [17, 23], type: \"EW\" }),\n  new Wire({ rowCol: [17, 24], type: \"EW\" }),\n  new Wire({ rowCol: [17, 25], type: \"EW\" }),\n  new Wire({ rowCol: [17, 26], type: \"EW\" }),\n  new Wire({ rowCol: [17, 27], type: \"EW\" }),\n  new Wire({ rowCol: [17, 28], type: \"NW\" }),\n  new Wire({ rowCol: [16, 28], type: \"NS\" }),\n  new Wire({ rowCol: [15, 28], type: \"NS\" }),\n  new WireJunction({ rowCol: [14, 28], segmentStrings: [\"N\", \"S\"] }),\n  new Wire({ rowCol: [13, 28], type: \"NS\" }),\n  new Wire({ rowCol: [12, 28], type: \"NS\" }),\n  new Wire({ rowCol: [11, 28], type: \"NS\" }),\n  new Wire({ rowCol: [10, 28], type: \"NS\" }),\n  new Wire({ rowCol: [9, 28], type: \"NS\" }),\n  new Wire({ rowCol: [8, 28], type: \"ESW\" }),\n  new Wire({ rowCol: [8, 29], type: \"NW\" }),\n  new Wire({ rowCol: [7, 29], type: \"NS\" }),\n  new Wire({ rowCol: [6, 29], type: \"NS\" }),\n  new Wire({ rowCol: [5, 29], type: \"NS\" }),\n  new Wire({ rowCol: [4, 29], type: \"WS\" }),\n  new WireJunction({ rowCol: [4, 28], segmentStrings: [\"E\", \"W\", \"N\"] }),\n  new Wire({ rowCol: [4, 27], type: \"EW\" }),\n  new Wire({ rowCol: [4, 26], type: \"EW\" }),\n  new Wire({ rowCol: [4, 25], type: \"EW\" }),\n  new Wire({ rowCol: [4, 24], type: \"EW\" }),\n  new Wire({ rowCol: [4, 23], type: \"EW\" }),\n  new Wire({ rowCol: [4, 22], type: \"EW\" }),\n  new Wire({ rowCol: [4, 21], type: \"EW\" }),\n  new Wire({ rowCol: [4, 20], type: \"EW\" }),\n  new Wire({ rowCol: [4, 19], type: \"EW\" }),\n  new Wire({ rowCol: [4, 18], type: \"ES\" }),\n  new Wire({ rowCol: [5, 18], type: \"NS\" }),\n  new Wire({ rowCol: [6, 18], type: \"NS\" }),\n  new Wire({ rowCol: [7, 18], type: \"NS\" }),\n\n  new Wire({ rowCol: [3, 28], type: \"NS\" }),\n  new Wire({ rowCol: [2, 28], type: \"NS\" }),\n  new Wire({ rowCol: [1, 28], type: \"WS\" }),\n  new Wire({ rowCol: [1, 27], type: \"EW\" }),\n  new Wire({ rowCol: [1, 26], type: \"EW\" }),\n  new Wire({ rowCol: [1, 25], type: \"EW\" }),\n  new Wire({ rowCol: [1, 24], type: \"EW\" }),\n  new Wire({ rowCol: [1, 23], type: \"EW\" }),\n  new Wire({ rowCol: [1, 22], type: \"EW\" }),\n  new Wire({ rowCol: [1, 21], type: \"EW\" }),\n  new Wire({ rowCol: [1, 20], type: \"EW\" }),\n  new Wire({ rowCol: [1, 19], type: \"EW\" }),\n  new Wire({ rowCol: [1, 18], type: \"EW\" }),\n\n  new Wire({ rowCol: [16, 15], type: \"NW\" }),\n  new Wire({ rowCol: [16, 14], type: \"EW\" }),\n  new Wire({ rowCol: [16, 13], type: \"EW\" }),\n  new Wire({ rowCol: [16, 12], type: \"EW\" }),\n  new Wire({ rowCol: [16, 11], type: \"EW\" }),\n  new Wire({ rowCol: [16, 10], type: \"EW\" }),\n  new Wire({ rowCol: [16, 9], type: \"ES\" }),\n  new Wire({ rowCol: [17, 9], type: \"NW\" }),\n  new Wire({ rowCol: [17, 8], type: \"EW\" }),\n  new Wire({ rowCol: [17, 7], type: \"EW\" }),\n  new Wire({ rowCol: [17, 6], type: \"EW\" }),\n  new Wire({ rowCol: [17, 5], type: \"EW\" }),\n  new Wire({ rowCol: [17, 4], type: \"NE\" }),\n  new Wire({ rowCol: [16, 4], type: \"NS\" }),\n  new Wire({ rowCol: [15, 4], type: \"NS\" }),\n  new Wire({ rowCol: [14, 4], type: \"WS\" }),\n  new WireJunction({ rowCol: [14, 3], segmentStrings: [\"N\", \"E\"] }),\n  new Wire({ rowCol: [13, 3], type: \"NS\" }),\n  new Wire({ rowCol: [12, 3], type: \"NS\" }),\n  new Wire({ rowCol: [11, 3], type: \"NSE\" }),\n  new Wire({ rowCol: [10, 3], type: \"NS\" }),\n  new Wire({ rowCol: [9, 3], type: \"NS\" }),\n  new WireJunction({ rowCol: [8, 3], segmentStrings: [\"E\", \"W\", \"S\"] }),\n  new Wire({ rowCol: [8, 2], type: \"NE\" }),\n  new Wire({ rowCol: [7, 2], type: \"NS\" }),\n  new Wire({ rowCol: [6, 2], type: \"NS\" }),\n  new Wire({ rowCol: [5, 2], type: \"NS\" }),\n  new Wire({ rowCol: [4, 2], type: \"NS\" }),\n  new Wire({ rowCol: [3, 2], type: \"NS\" }),\n  new Wire({ rowCol: [2, 2], type: \"NS\" }),\n  new Wire({ rowCol: [1, 2], type: \"ES\" }),\n  new Wire({ rowCol: [1, 3], type: \"EW\" }),\n  new Wire({ rowCol: [1, 4], type: \"EW\" }),\n  new Wire({ rowCol: [1, 5], type: \"EW\" }),\n  new Wire({ rowCol: [1, 6], type: \"EW\" }),\n  new Wire({ rowCol: [1, 7], type: \"EW\" }),\n  new Wire({ rowCol: [1, 8], type: \"EW\" }),\n  new Wire({ rowCol: [1, 9], type: \"EW\" }),\n  new Wire({ rowCol: [1, 10], type: \"EW\" }),\n  new Wire({ rowCol: [1, 11], type: \"EW\" }),\n  new Wire({ rowCol: [1, 12], type: \"ESW\" }),\n  new Wire({ rowCol: [1, 13], type: \"EW\" }),\n  new Wire({ rowCol: [2, 12], type: \"NS\" }),\n  new Wire({ rowCol: [3, 12], type: \"NS\" }),\n  new Wire({ rowCol: [4, 12], type: \"NE\" }),\n  new Wire({ rowCol: [4, 13], type: \"WS\" }),\n  new Wire({ rowCol: [5, 13], type: \"NS\" }),\n  new Wire({ rowCol: [6, 13], type: \"NS\" }),\n  new Wire({ rowCol: [7, 13], type: \"NS\" }),\n]\n\nvar openGreenDoors = function (button) {\n  for (var i = 0; i < doors.length; i++) {\n    if (doors[i].color == 'green') {\n      doors[i].open()\n    } else {\n      doors[i].close()\n    }\n  }\n}\n\nvar openRedDoors = function (button) {\n  for (var i = 0; i < doors.length; i++) {\n    if (doors[i].color == 'red') {\n      doors[i].open()\n    } else {\n      doors[i].close()\n    }\n  }\n}\n\nvar buttonBlocks = [\n  new ButtonBlock({\n    id: \"BB101\",\n    side: \"left\",\n    rowCol: [5, 12],\n    color: 'green',\n    func: openGreenDoors\n  }),\n  new ButtonBlock({\n    id: \"BB102\",\n    side: \"right\",\n    rowCol: [8, 4],\n    func: openRedDoors\n  }),\n  new ButtonBlock({\n    id: \"BB103\",\n    side: \"right\",\n    rowCol: [8, 4],\n    func: openRedDoors\n  }),\n  new ButtonBlock({\n    id: \"BB104\",\n    side: \"right\",\n    color: 'green',\n    rowCol: [17, 9],\n    func: openGreenDoors\n  }),\n  new ButtonBlock({\n    id: \"BB105\",\n    side: \"right\",\n    color: 'green',\n    rowCol: [11, 4], //check\n    func: openGreenDoors\n  }),\n  new ButtonBlock({\n    id: \"BB106\",\n    side: \"left\",\n    rowCol: [8, 4],\n    func: openRedDoors\n  }),\n\n  new ButtonBlock({\n    id: \"BB107\",\n    side: \"left\",\n    rowCol: [17, 22],\n    func: openRedDoors\n  }),\n  new ButtonBlock({\n    id: \"BB108\",\n    side: \"left\",\n    rowCol: [11, 27],\n    func: openRedDoors\n  }),\n  new ButtonBlock({\n    id: \"BB109\",\n    side: \"right\",\n    color: 'green',\n    rowCol: [8, 18],\n    func: openGreenDoors\n  }),\n  new ButtonBlock({\n    id: \"BB110\",\n    side: \"left\",\n    color: 'green',\n    rowCol: [8, 27],\n    func: openGreenDoors\n  }),\n  new ButtonBlock({\n    id: \"BB111\",\n    side: \"right\",\n    rowCol: [5, 18],\n    func: openRedDoors\n  })\n];\n\nvar forceFieldBlocks = [\n  new ForceFieldBlock({\n    id: \"FF101\",\n    rowCol: [1, 14]\n  }),\n  new ForceFieldBlock({\n    id: \"FF102\",\n    rowCol: [1, 17]\n  })\n];\n\nvar foregroundGrid = [\n  builder.rowOf(15, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(15, \"block\")),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(7, \"\")).concat(builder.rowOf(1, \"block\")).concat([forceFieldBlocks[0]]).concat(builder.rowOf(2, \"\")).concat([forceFieldBlocks[1]]).concat(builder.rowOf(1, \"block\")).concat(builder.rowOf(12, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(7, \"\")).concat(doors[0]).concat(\"forceField\").concat(builder.rowOf(2, \"\")).concat([\"forceField\"]).concat(doors[9]).concat(builder.rowOf(7, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(7, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(7, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(8, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(8, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(4, \"\")).concat([doors[1]]).concat(builder.rowOf(7, \"\")).concat([buttonBlocks[0]]).concat(builder.rowOf(4, \"\")).concat([buttonBlocks[10]]).concat(builder.rowOf(7, \"\")).concat([doors[8]]).concat(builder.rowOf(4, \"\")).concat([\"block\"]),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(1, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(10, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(1, \"\")).concat([\"block\"]),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(4, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(14, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(3, \"\")).concat([buttonBlocks[2]]).concat(builder.rowOf(3, \"\")).concat([doors[2]]).concat(builder.rowOf(4, \"\")).concat([buttonBlocks[5]]).concat(builder.rowOf(4, \"\")).concat([buttonBlocks[8]]).concat(builder.rowOf(4, \"\")).concat([doors[7]]).concat(builder.rowOf(3, \"\")).concat([buttonBlocks[9]]).concat(builder.rowOf(3, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(1, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(10, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(4, \"block\")).concat([\"\"]).concat([\"block\"]),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(8, \"\")).concat(builder.rowOf(4, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(6, \"block\")),\n  builder.rowOf(4, \"block\").concat([buttonBlocks[4]]).concat(builder.rowOf(3, \"\")).concat(builder.rowOf(16, \"block\")).concat(builder.rowOf(3, \"\")).concat([buttonBlocks[7]]).concat(builder.rowOf(4, \"block\")),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(16, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(6, \"block\")),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(4, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(4, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"powerBlock\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(1, \"block\").concat(builder.rowOf(4, \"\")).concat([doors[3]]).concat(builder.rowOf(3, \"\")).concat([doors[4]]).concat(builder.rowOf(4, \"\")).concat([\"block\"]).concat(builder.rowOf(2, \"powerBlock\")).concat([\"block\"]).concat(builder.rowOf(4, \"\")).concat([doors[5]]).concat(builder.rowOf(3, \"\")).concat([doors[6]]).concat(builder.rowOf(3, \"\")).concat([new Spring()]).concat(builder.rowOf(1, \"block\")),\n  builder.rowOf(6, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(3, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(2, \"block\")).concat([powerSources[0]]).concat([powerSources[0]]).concat(builder.rowOf(2, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(3, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(6, \"block\")),\n  builder.rowOf(9, \"block\").concat(builder.rowOf(14, \"\")).concat(builder.rowOf(9, \"block\")),\n  builder.rowOf(9, \"block\").concat(buttonBlocks[3]).concat(builder.rowOf(12, \"\")).concat(buttonBlocks[6]).concat(builder.rowOf(9, \"block\")),\n  builder.rowOf(11, \"block\").concat(builder.rowOf(2, \"\")).concat(builder.rowOf(6, \"block\")).concat(builder.rowOf(2, \"\")).concat(builder.rowOf(11, \"block\")),\n  builder.rowOf(32, \"block\"),\n  builder.rowOf(32, \"block\"),\n  builder.rowOf(32, \"block\")\n];\n\nvar backgroundGrid = [\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\"),\n  builder.rowOf(32, \"brick\")\n];\n\nlevel = new Level({\n  name: \"Level 3\",\n  color: '#8B8D9A',\n  foregroundGrid: foregroundGrid,\n  backgroundGrid: backgroundGrid,\n  startingPos: [1000.5, 1275.5],\n  elevators: elevators,\n  doors: doors,\n  cubbies: cubbies,\n  wiring: wiring,\n  powerSources: powerSources,\n  forceFieldBlocks: forceFieldBlocks,\n  buttonBlocks: buttonBlocks\n});\n\nmodule.exports = level;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/levels/level3.js\n ** module id = 22\n ** module chunks = 0\n **/"],"sourceRoot":""}